{"version":3,"sources":["utils.js","components/Footer.js","components/Header.js","pages/MainPage.js","pages/CreateVideosPage.js","components/CreateFeedForm.js","components/ConfirmModal.js","components/ArrangeFeed.js","components/Loading.js","components/PreviewFeed.js","components/ArrangeVisuals.js","pages/CreateFeedPage.js","components/LoadingModal.js","pages/LoginPage.js","components/TestVideo.js","components/TestVideoDouble.js","components/CompareTests.js","components/CompareTestsDouble.js","components/UserDefault.js","pages/UserPage.js","pages/MyFeedsPage.js","App.js","reportWebVitals.js","index.js"],"names":["getPreviewVideo","feedData","token","a","fetch","method","body","JSON","stringify","headers","sessionStorage","getItem","res","json","resData","ok","res2","res2Data","logout","removeItem","window","location","reload","Footer","className","href","style","backgroundColor","Header","email","setUserPageState","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","onClick","MainPage","Row","Col","lg","Carousel","Item","height","xs","src","width","alt","autoPlay","loop","type","Caption","maxHeight","maxWidth","CreateVideosPage","CreateFeedForm","setCreateFeedState","setAlertState","setData","useState","feedName","setFeedName","feedURL","setFeedURL","handleSubmit","show","text","URLSearchParams","data","Form","onSubmit","e","preventDefault","Group","Label","Control","required","placeholder","value","onInput","target","Button","ConfirmModal","title","buttonText","handleClose","handleConfirm","Modal","onHide","closeButton","Title","Body","ArrangeFeed","ImgUrl","setImgUrl","setTitle","setBody","WebUrl","setWebUrl","colOptions","modalShow","setModalShow","feed_name","feed_url","map","colOption","i","Fragment","column","sm","col","Select","get","onChange","set","disabled","col_names","colName","Table","striped","bordered","hover","size","feed_data","feed","Object","values","element","toString","length","substring","Loading","Spinner","animation","role","PreviewFeed","handleGenerate","ArrangeVisuals","handleClick","resp","stat","url","detail","CreateFeedPage","CreateFeedState","AlertState","Data","Progress","setProgress","useEffect","header","ProgressBar","now","percent","label","Alert","visibility","main","LoadingModal","LoginPage","setEmail","saveUserData","setIsAuth","loadingShow","setLoadingShow","password","setPassword","controlId","TestVideo","isGenerating","setIsGenerating","testVideoData","setTestVideoData","setToastShow","start","performance","videoData","message","imageData","split","imageType","checked","end","toFixed","status","accept","files","reader","FileReader","onload","frEvent","result","readAsDataURL","currentTarget","TestVideoDouble","testVideo2","setTestVideo2","imageUrl1","imageUrl2","FloatingLabel","CompareTests","videosData","setVideosData","getVideos","item","created_at","source_url","result_url","CompareTestsDouble","source_url_1","source_url_2","UserDefault","userData","md","userFeeds","UserPage","userPageState","testVideoDoubleData","setTestVideoDoubleData","setUserData","getUser","MyFeedsPage","userFeedsData","setUserFeedsData","currentFeed","setCurrentFeed","console","log","getUserFeeds","ListGroup","action","active","getEmail","funcKey","jwt","setItem","App","isAuth","toastShow","path","Toast","onClose","delay","autohide","position","bottom","right","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.014a938c.chunk.js","sourcesContent":["export const getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport const getPreviewVideo = async (feedData, token) => {\r\n\r\n    let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            'user_id': 1,\r\n            'feed_id': feedData['feed_id'],\r\n            'img_url': feedData['feed_data']['data'][0][feedData['img_url_col']],\r\n            'title': feedData['feed_data']['data'][0][feedData['title_col']],\r\n            'body': feedData['feed_data']['data'][0][feedData['body_col']],\r\n            'site_url': feedData['feed_data']['data'][0][feedData['site_url_col']],\r\n\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'x-functions-key': sessionStorage.getItem('functions-key')\r\n        },\r\n    })\r\n\r\n    let resData = await res.json();\r\n    if (res.ok) {\r\n        let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'video_id': resData['video_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n\r\n            },\r\n        })\r\n\r\n        let res2Data = await res2.json();\r\n        if (res2.ok) {\r\n            return { \"stat\": true, \"url\": res2Data['result_url'] }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    else {\r\n        return { \"stat\": false, \"detail\": \"Invalid values in first row of the feed. Check again\" }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n    sessionStorage.removeItem('functions-key');\r\n    sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('userToken');\r\n    window.location.reload();\r\n}\r\n// import { getCookie } from '../utils'\r\n// var csrftoken = getCookie('csrftoken');","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faCoffee, faFace} from '@fortawesome/free-solid-svg-icons'\r\nconst Footer = () => {\r\n  return (\r\n\r\n<footer className=\"text-center text-lg-start bg-light text-muted mt-5\">\r\n  {/* <section\r\n    className=\"d-flex justify-content-center justify-content-lg-between p-4 border-bottom\"\r\n  >\r\n    <div className=\"me-5 d-none d-lg-block\">\r\n      <span>Get connected with us on social networks:</span>\r\n    </div>\r\n    <div>\r\n      <a href=\"\" className=\"me-4 text-reset\">\r\n        <i className=\"fab fa-facebook-f\"></i>\r\n      </a>\r\n      <a href=\"\" className=\"me-4 text-reset\">\r\n        <i className=\"fab fa-linkedin\"></i>\r\n      </a>\r\n      <a href=\"\" className=\"me-4 text-reset\">\r\n        <i className=\"fab fa-github\"></i>\r\n      </a>\r\n    </div>\r\n  </section> */}\r\n\r\n  <section className=\"pt-1\">\r\n    <div className=\"container text-center text-md-start mt-5\">\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\r\n          <h6 className=\"text-uppercase fw-bold mb-4\">\r\n            {/* <i className=\"fas fa-gem me-3\"></i>Company name */}\r\n          </h6>\r\n          <p>\r\n            Generate videos from shoe images.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n          <h6 className=\"text-uppercase fw-bold mb-4\">\r\n            Products\r\n          </h6>\r\n          <p>\r\n            <a href=\"#!\" className=\"text-reset\">Test1</a>\r\n          </p>\r\n          \r\n          <p>\r\n            <a href=\"#!\" className=\"text-reset\">Tes2</a>\r\n          </p>\r\n          \r\n        </div>\r\n\r\n        <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n          <h6 className=\"text-uppercase fw-bold mb-4\">\r\n            Useful links\r\n          </h6>\r\n          <p>\r\n            <a href=\"#!\" className=\"text-reset\">Pricing</a>\r\n          </p>\r\n          \r\n          <p>\r\n            <a href=\"#!\" className=\"text-reset\">Help</a>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\r\n          <h6 className=\"text-uppercase fw-bold mb-4\">\r\n            Contact\r\n          </h6>\r\n          <p><i className=\"fas fa-home me-3\"></i> Kozyatağı Kadıköy - İstanbul</p>\r\n          <p>\r\n            <i className=\"fas fa-envelope me-3\"></i>\r\n            golive.com.tr\r\n          </p>\r\n          {/* <p><i className=\"fas fa-phone me-3\"></i> + 01 234 567 88</p> */}\r\n          {/* <p><i className=\"fas fa-print me-3\"></i> + 01 234 567 89</p> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <div className=\"text-center p-4\" style={{backgroundColor: \"rgba(0, 0, 0, 0.05)\"}} >\r\n    © 2021 Copyright:\r\n    {/* <a className=\"text-reset fw-bold\" href=\"https://mdbootstrap.com/\">MDBootstrap.com</a> */}\r\n  </div>\r\n</footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Header = ({email, logout, setUserPageState}) => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">AdVideoMaker</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        \r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/createFeed\">Create Feed</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/myFeeds\">My Feeds</Nav.Link>\r\n\r\n                        {/* <Nav.Link as={Link} to=\"/createVideos\">Create Videos</Nav.Link> */}\r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                    </Nav>\r\n                    {/* <Nav>\r\n                        <Nav.Link as={Link} to=\"/\" eventKey={1}>PlaceHolder1</Nav.Link>\r\n                        <Nav.Link eventKey={2} as={Link} to=\"/\">\r\n                            PlaceHolder2\r\n                        </Nav.Link>\r\n                    </Nav> */}\r\n                    <Nav>\r\n                        <Nav.Link onClick={() => {setUserPageState(\"\")}} as={Link} to=\"/user\">\r\n                            {email}\r\n                        </Nav.Link>\r\n                        <Nav.Link onClick={logout}>\r\n                            Log Out\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col, Carousel } from 'react-bootstrap'\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-4 fs-4'>\r\n                            {/* <strong >Main Page</strong>  */}\r\n\r\n\r\n                            <Carousel variant=\"dark\" className=\"w-100\" style={{  backgroundColor: 'white'}}>\r\n                                <Carousel.Item style={{ height: '360px' }}>\r\n                                <Row className='gx-0'>\r\n                                    <Col xs lg=\"6\">\r\n                                        <img src=\"https://videoappex.blob.core.windows.net/video-test/5319bd07-be0a-45d0-9fc6-cdbdf482f7ee\" style={{ width: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"6\">\r\n                                        <video width=\"100%\" autoPlay loop>\r\n                                            <source src=\"https://videoappex.blob.core.windows.net/video-container/0b45fb2f-82bb-4e60-927f-d87913ce0ba9\" type=\"video/mp4\"></source>\r\n                                        </video>\r\n                                    </Col>\r\n                                </Row>\r\n                                    <Carousel.Caption>\r\n                                        {/* <h5>First slide label</h5> */}\r\n                                        <p>Generate videos from single image.</p>\r\n                                    </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item style={{ height: '360px', backgroundColor: 'white'}}>\r\n                                    \r\n                                    <Row className='gx-0 mt-4'>\r\n                                    \r\n                                    <Col xs lg=\"4\">\r\n                                        <img src=\"https://productimages.hepsiburada.net/s/178/1500/110000143052193.jpg\" style={{ maxHeight: \"100%\", maxWidth: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <img src=\"https://productimages.hepsiburada.net/s/178/1500/110000143052194.jpg\" style={{ maxHeight: \"100%\", maxWidth: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <video width=\"100%\" autoPlay loop>\r\n                                            <source src=\"https://videoappex.blob.core.windows.net/video-container/9673568c-d917-4d1d-a5dc-abe3f55cd760\" type=\"video/mp4\"></source>\r\n                                        </video>\r\n                                    </Col>\r\n                                </Row>\r\n                                    <Carousel.Caption>\r\n                                        {/* <h5>Second slide label</h5> */}\r\n                                        <p>Generate video from a image pair.</p>\r\n                                    </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                                <Carousel.Item style={{ height: '360px' }}>\r\n                                <Row className='gx-0 justify-content-md-center'>\r\n                                    <Col xs lg=\"6\">\r\n                                        <img src=\"https://www.dignited.com/wp-content/uploads/2021/03/google-sheets.png\" style={{ width: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                    <Carousel.Caption>\r\n                                        {/* <h5>Third slide label</h5> */}\r\n                                        <p>Provide a feed to auto generate videos.</p>\r\n                                    </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                            </Carousel>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { }  from 'react'\r\nconst CreateVideosPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create Videos</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateVideosPage\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst CreateFeedForm = ({ setCreateFeedState, setAlertState, setData, token }) => {\r\n    const [feedName, setFeedName] = useState('')\r\n    const [feedURL, setFeedURL] = useState('https://docs.google.com/spreadsheets/d/e/2PACX-1vQvm265NJfQjH0GtMLNRD7rJIA5vapYsz1BbIEsmdOYJGuvWlfARCYwy3SS9BmVGGOJ4-MGhcoO7h8w/pub?gid=0&single=true&output=csv')\r\n\r\n\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/check_feed?` + new URLSearchParams({ feedURL: feedURL }), {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key'),\r\n\r\n\r\n            },\r\n        })\r\n\r\n        let data = await res.json();\r\n        if (res.ok) {\r\n            data['feed_name'] = feedName;\r\n            setData(data);\r\n            setCreateFeedState(\"arrangeFeed\");\r\n\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: data['detail'] })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Form onSubmit={e => { openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={e => { handleSubmit(); e.preventDefault(); }}>\r\n                \r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed Name</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Enter a name for your feed.\"\r\n                        value={feedName} onInput={e => setFeedName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed URL</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter feed URL.\"\r\n                        value={feedURL} onInput={e => setFeedURL(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type='submit'>Submit</Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateFeedForm\r\n","import { Modal, Button } from 'react-bootstrap'\r\nimport React from 'react'\r\n\r\nconst ConfirmModal = ({ show, title, text, buttonText,\r\n    handleClose, handleConfirm }) => {\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{text}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => { handleConfirm(); handleClose(); }}>\r\n                    {buttonText}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmModal\r\n","import React, { useState } from 'react'\r\nimport { Form, Row, Col, Table, Button} from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\nconst ArrangeFeed = ({ setCreateFeedState, setAlertState, feedData, setData }) => {\r\n\r\n\r\n    const [ImgUrl, setImgUrl] = useState(false)\r\n    const [Title, setTitle] = useState(false)\r\n    const [Body, setBody] = useState(false)\r\n    const [WebUrl, setWebUrl] = useState(false)\r\n\r\n    const colOptions = [{\"col\":\"Image URL\", \"set\": setImgUrl, \"get\": ImgUrl}, \r\n                        {\"col\": \"Title\", \"set\": setTitle, \"get\": Title}, \r\n                        {\"col\": \"Body\", \"set\": setBody, \"get\": Body}, \r\n                        {\"col\": \"Website URL\", \"set\": setWebUrl, \"get\": WebUrl}];\r\n    \r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    let handleSaveClick = (e) => {\r\n\r\n        if(ImgUrl && Title && Body && WebUrl){\r\n            openModal(); \r\n        }\r\n        else{\r\n            setAlertState({ show: true, text: \"Please fill all of the fields first.\" })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/create_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'user_id': 1,\r\n                'feed_name': feedData.feed_name,\r\n                'feed_url': feedData.feed_url,\r\n                'img_url_col': ImgUrl,\r\n                'title_col': Title,\r\n                'site_url_col': WebUrl,\r\n                'body_col': Body,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n\r\n            // data[\"first_rows\"] = feedData.feed_data.data;\r\n            feedData[\"title_col\"] = resData[\"title_col\"]\r\n            feedData[\"site_url_col\"] = resData[\"site_url_col\"]\r\n            feedData[\"img_url_col\"] = resData[\"img_url_col\"]\r\n            feedData[\"body_col\"] = resData[\"body_col\"]\r\n            feedData[\"feed_id\"] = resData[\"feed_id\"]\r\n            \r\n            setData(feedData)\r\n            setCreateFeedState(\"arrangeVisuals\");\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: resData['detail'] })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Form onSubmit={e => {openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={handleSaveClick}>\r\n\r\n                <Row>\r\n                    {colOptions.map((colOption, i) =>\r\n                        <React.Fragment key={i}>\r\n                            <Col>\r\n                                <Form.Group as={Row} className=\"mb-3\">\r\n                                    <Form.Label column sm={4} className='text-end fw-bold'>\r\n                                        {colOption.col}\r\n                                    </Form.Label>\r\n                                    <Col sm={8}>\r\n\r\n                                        {/* <Form.Select aria-label=\"Default select example\" onChange={e => setColMatches(state => (state[colOption] = e.target.value))}> */}\r\n                                        {/* <Form.Select aria-label=\"Default select example\"  value={colOption.get} onChange={(e)=>{colOption.set(e)}}> */}\r\n                                        <Form.Select aria-label=\"Default select example\" value={colOption.get}   onChange={(e)=>{colOption.set(e.target.value)}}>\r\n                                            <option disabled value={false}>Select..</option>\r\n                                            \r\n                                            {feedData.col_names.map((colName, i) =>\r\n\r\n                                                <option key={i} value={colName}>{colName}</option>\r\n\r\n                                            )}\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            {(i % 2 === 1) &&\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                    )}\r\n                </Row>\r\n                <Button variant=\"primary\" type='submit'>Save</Button>\r\n\r\n            </Form>\r\n            <div className='mt-4'>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            {feedData.col_names.map((colName, i) =>\r\n                                <th key={i}>{colName}</th>\r\n\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {feedData.feed_data.data.map((feed, i) =>\r\n                            <tr key={i}>\r\n                                {/* 50 den buyuk karakterli satırlar için hepsini yazdırma */}\r\n                                {Object.values(feed).map((element, i) =>\r\n                                    <td key={i}>\r\n\r\n                                        {element.toString().length < 50 ? element : element.toString().substring(0, 50) + '...'}</td>\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to create a new feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleSubmit} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ArrangeFeed\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = ({height=100, width=200}) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{height: height +\"px\", width: width +\"px\"}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\n\r\nconst PreviewFeed = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n    \r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    \r\n    let confirmGenerate = (e) => {\r\n        openModal();\r\n    }\r\n\r\n    let handleGenerate = async () => {  \r\n\r\n        setCreateFeedState(\"loading\")\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'feed_id': feedData['feed_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n\r\n\r\n            },\r\n        })\r\n    \r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video_feed`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'video_ids': resData['video_ids'],\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n\r\n                },\r\n            })\r\n        \r\n            let res2Data = await res2.json();\r\n            if (res2.ok) {\r\n                setCreateFeedState(\"success\")\r\n\r\n                return\r\n\r\n\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        else {\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <video width=\"320\" height=\"240\" autoPlay loop>\r\n                <source src={feedData['previewVideoUrl']} type=\"video/mp4\"></source>\r\n            </video>\r\n            <div>\r\n\r\n            {/* <img width=\"320\" src={feedData['previewVideoUrl']} /> */}\r\n            </div>\r\n\r\n            \r\n            <Button variant=\"primary\" onClick={confirmGenerate}>Start Generating Videos</Button>\r\n\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to start generating videos from this feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleGenerate} />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PreviewFeed\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport {getPreviewVideo} from '../utils.js'\r\n\r\nconst ArrangeVisuals = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n    const handleClick = async (e) => {\r\n        setCreateFeedState(\"loading\")\r\n        \r\n        let resp = await getPreviewVideo(feedData)\r\n        if(resp.stat){\r\n            feedData['previewVideoUrl'] = resp.url\r\n            setData(feedData)\r\n            setCreateFeedState(\"preview\")\r\n        }\r\n        else{\r\n            setCreateFeedState(\"arrangeFeed\")\r\n            setAlertState({ show: true, text: resp.detail })\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n\r\n            <p> Pick a theme </p>\r\n            <p> Pick a color etc...</p>\r\n            <Button variant=\"primary\" onClick={handleClick}>Continue</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArrangeVisuals\r\n","import React, { useState, useEffect} from 'react'\r\nimport { Container, Alert, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport CreateFeedForm from '../components/CreateFeedForm'\r\nimport ArrangeFeed from '../components/ArrangeFeed'\r\nimport Loading from '../components/Loading'\r\nimport PreviewFeed from '../components/PreviewFeed'\r\nimport ArrangeVisuals from '../components/ArrangeVisuals'\r\nconst CreateFeedPage = ({token}) => {\r\n    const [CreateFeedState, setCreateFeedState] = useState(\"checkURL\")\r\n\r\n    const [AlertState, setAlertState] = useState({ show: false, text: \"\" })\r\n    const [Data, setData] = useState({})\r\n    const [Progress, setProgress] = useState({\"percent\": 10, \"label\": \"1/5\"})\r\n    \r\n    useEffect(() => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                setProgress({\"percent\": 10, \"label\": \"1/5\"});\r\n                break;\r\n            case \"arrangeFeed\":\r\n                setProgress({\"percent\": 35, \"label\": \"2/5\"});\r\n                break;\r\n            case \"arrangeVisuals\":\r\n                setProgress({\"percent\": 60, \"label\": \"3/5\"});\r\n                break;\r\n            case \"preview\":\r\n                setProgress({\"percent\": 85, \"label\": \"4/5\"});\r\n                break;\r\n            case \"success\":\r\n                setProgress({\"percent\": 100, \"label\": \"5/5\"});\r\n                break;\r\n            case \"loading\":\r\n                break;\r\n            default:\r\n                return \"\"\r\n        }\r\n\r\n        return () => {\r\n        }\r\n    }, [CreateFeedState])\r\n\r\n    const header = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return \"Provide a URL\"\r\n            case \"arrangeFeed\":\r\n                return Data.feed_name + \" - Match the columns\"\r\n            case \"arrangeVisuals\":\r\n                return Data.feed_name + \" - Arrange Visuals\"\r\n            case \"preview\":\r\n                return Data.feed_name + \" - Video Preview\"\r\n            case \"loading\":\r\n                return \"\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const main = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} token={token}/>\r\n            case \"arrangeFeed\":\r\n                return <ArrangeFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} token={token}/>\r\n\r\n            case \"arrangeVisuals\":\r\n                return <ArrangeVisuals setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} token={token}/>\r\n            case \"preview\":\r\n                return <PreviewFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} token={token}/>\r\n\r\n            case \"success\":\r\n                return <div className='fs-5'>\r\n                        Videos successfully generated.                  \r\n                    </div>\r\n            case \"loading\":\r\n                return <Loading width={300} height={200} />\r\n            default:\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} token={token}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Create a new feed:</strong> <span>{header(CreateFeedState)}</span>\r\n                        </div>\r\n                        <ProgressBar className='fs-5 fw-bold' style={{height: '25px'}} striped variant=\"info\" now={Progress.percent} label={Progress.label} />\r\n                        <Alert className='mt-2' variant='danger' style={{ visibility: AlertState.show ? 'visible' : 'hidden', height: \"50px\" }}>\r\n                            {AlertState.text}\r\n                        </Alert>\r\n                        {main(CreateFeedState)}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFeedPage\r\n","import React from 'react'\r\nimport { Modal} from 'react-bootstrap'\r\nimport Loading from '../components/Loading'\r\n\r\nconst LoadingModal = ({show, text}) => {\r\n    return (\r\n        <Modal show={show} size=\"sm\">\r\n            <Modal.Body  className='text-center' style={{height: \"150px\"}}>\r\n                {text}\r\n                <Loading width={260} height={100} />\r\n            \r\n            \r\n            </Modal.Body>\r\n            \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default LoadingModal","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\n\r\nconst LoginPage = ({ email, setEmail, saveUserData, setIsAuth }) => {\r\n\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n    const [password, setPassword] = useState('')\r\n\r\n    let handleSubmit = async (e) => {\r\n\r\n        setLoadingShow(true)\r\n\r\n        e.preventDefault();\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/authenticate`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'email': email,\r\n                'password': password,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n\r\n        if (res.ok) {\r\n\r\n            saveUserData(resData['key'], email, resData['user_token'])\r\n            setIsAuth(true)\r\n            setLoadingShow(false)\r\n\r\n        }\r\n        else {\r\n            setLoadingShow(false)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <LoadingModal show={loadingShow} text={'Logging in...'} />\r\n\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"5\">\r\n                        <Form onSubmit={handleSubmit} className='mt-4'>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onInput={e => setEmail(e.target.value)} required/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onInput={e => setPassword(e.target.value)} required/>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container, Alert } from 'react-bootstrap'\r\n\r\n\r\nconst TestVideo = ({ token, setUserPageState, isGenerating, setIsGenerating,\r\n     testVideoData, setTestVideoData, setToastShow }) => {\r\n\r\n\r\n\r\n\r\n    let handleImage = (e) => {\r\n        if(!e.target.files[0]) return;\r\n\r\n\r\n        var reader = new FileReader();\r\n        reader.onload = function (frEvent) {\r\n\r\n            // var image = new Image();\r\n            // image.onload = function (imageEvent) {\r\n\r\n            //     // Resize the image\r\n            //     var canvas = document.createElement('canvas'),\r\n            //         y_offset = 0,\r\n            //         x_offset = 0,\r\n            //         set_width = 256,\r\n            //         set_height = 256,\r\n            //         img_width = image.width,\r\n            //         img_height = image.height;\r\n\r\n            //     if (img_width > img_height) {\r\n            //         x_offset = (img_width - img_height) / 2\r\n            //     } else {\r\n            //         y_offset = (img_height - img_width) / 2\r\n            //     }\r\n\r\n            //     canvas.width = set_width;\r\n            //     canvas.height = set_height;\r\n            //     canvas.getContext('2d').drawImage(image, x_offset, y_offset, img_width - x_offset * 2, img_height - y_offset * 2,\r\n            //         0, 0, set_width, set_height);\r\n            //     var dataUrl = canvas.toDataURL('image/jpeg');\r\n            //     setImageData(dataUrl)\r\n\r\n            // }\r\n            // image.src = frEvent.target.result;\r\n\r\n\r\n            setTestVideoData({...testVideoData, imageData: frEvent.target.result})\r\n        }\r\n\r\n        setTestVideoData({...testVideoData, imageType: e.target.files[0].type})\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    let handleSubmit = async (e) => {\r\n        setIsGenerating(true)\r\n        e.preventDefault();\r\n        var start = window.performance.now();\r\n\r\n        setTestVideoData({...testVideoData, videoData: false, message: false})\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/test_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'image_data': testVideoData.imageData.split(\",\", 2)[1],\r\n                'image_type': testVideoData.imageType,\r\n                'is_save': testVideoData.checked\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            \r\n            var end = window.performance.now();\r\n            setTestVideoData({...testVideoData, videoData: resData['result_url'],\r\n            message: {\"status\": \"success\", \"message\": \"Video successfully generated in \" +((end - start) / 1000).toFixed(2) + \" seconds. \"\r\n         + \"Shoe counts, tensorflow: \" + resData['shoe-count-tensorflow'] + \" mediapipe: \"  + resData['shoe-count-mediapipe'] }})\r\n\r\n            setIsGenerating(false)\r\n            setToastShow(true);\r\n\r\n        }\r\n        else {\r\n\r\n\r\n            if(res.status === 404){\r\n                setTestVideoData({...testVideoData, message: {\"status\": \"danger\", \"message\": resData['detail'], \"time\": \"\"}})\r\n            }\r\n            else{\r\n                setTestVideoData({...testVideoData, message: {\"status\": \"danger\", \"message\": \"Error code: \"+ (res.status).toString(), \"time\": \"\"}})\r\n            }\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{}}>\r\n            <Row className=\"mt-4\">\r\n\r\n                <Col xs lg=\"2\" >\r\n                    <Button variant=\"warning\" size=\"sm\" className='' onClick={() => { setUserPageState(\"\"); }}>\r\n                        Back\r\n                    </Button>\r\n                </Col>\r\n                <Col xs lg=\"8\">\r\n\r\n\r\n                    {/* <LoadingModal show={loadingShow} text={'Generating video'} /> */}\r\n                    <Form onSubmit={handleSubmit} className='mb-4'>\r\n                        <Row className='mb-1'>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImage} required/>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col xs lg=\"4\">\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isGenerating} style={{width: \"160px\"}}>\r\n                                    {isGenerating ? 'Generating video...' : 'Submit'}\r\n\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs lg=\"1\">\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group>\r\n\r\n                                <div className=\"form-check form-switch\">\r\n                                    <Form.Control className=\"form-check-input\" type=\"checkbox\" checked={testVideoData.checked}\r\n                                        onChange={(e) => setTestVideoData({...testVideoData, checked: e.currentTarget.checked})}/>\r\n                                    <label className=\"form-check-label text-muted\">Add to results</label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                    </Form>\r\n\r\n\r\n                    <Row style={{ height: '420px' }}>\r\n                        <Col xs lg=\"6\">\r\n                            <img src={testVideoData.imageData} style={{ width: \"90%\" }} alt=\"\"/>\r\n\r\n                        </Col>\r\n                        <Col xs lg=\"6\">\r\n                            {testVideoData.videoData &&\r\n                                <video width=\"90%\" autoPlay loop>\r\n                                    <source src={testVideoData.videoData} type=\"video/mp4\"></source>\r\n                                </video>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {testVideoData.message &&\r\n\r\n                        <Alert  variant={testVideoData.message['status']}>\r\n                            {testVideoData.message['message']}\r\n                        </Alert>\r\n                    }\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TestVideo;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container, Alert, FloatingLabel } from 'react-bootstrap'\r\n\r\nconst TestVideoDouble = ({ token, setUserPageState, isGenerating, setIsGenerating,\r\n    testVideo2, setTestVideo2, setToastShow }) => {\r\n\r\n    let handleSubmit = async (e) => {\r\n        setIsGenerating(true)\r\n        e.preventDefault();\r\n        var start = window.performance.now();\r\n\r\n        setTestVideo2({ ...testVideo2, videoData: false, message: false })\r\n\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/test_video_double`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'img_url_1': testVideo2.imageUrl1,\r\n                'img_url_2': testVideo2.imageUrl2,\r\n                'is_save': testVideo2.checked\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n\r\n            var end = window.performance.now();\r\n            setTestVideo2({\r\n                ...testVideo2, videoData: resData['result_url'],\r\n                message: { \"status\": \"success\", \"message\": \"Video successfully generated in \" + ((end - start) / 1000).toFixed(2) + \" seconds. \"\r\n                + \"Shoe counts, 1-> tensorflow: \" + resData['shoe-count-tensorflow1'] + \" mediapipe: \"  + resData['shoe-count-mediapipe1'] +\r\n            \", 2-> tensorflow: \" + resData['shoe-count-tensorflow2'] + \" mediapipe: \"  + resData['shoe-count-mediapipe2'] }\r\n            })\r\n\r\n            setIsGenerating(false);\r\n            setToastShow(true);\r\n        }\r\n        else {\r\n\r\n\r\n            if (res.status === 404) {\r\n                setTestVideo2({ ...testVideo2, message: { \"status\": \"danger\", \"message\": resData['detail'], \"time\": \"\" } })\r\n            }\r\n            else {\r\n                setTestVideo2({ ...testVideo2, message: { \"status\": \"danger\", \"message\": \"Error code: \" + (res.status).toString(), \"time\": \"\" } })\r\n            }\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{}}>\r\n            <Row className=\"mt-4\">\r\n\r\n                <Col xs lg=\"2\" >\r\n                    <Button variant=\"warning\" size=\"sm\" className='' onClick={() => { setUserPageState(\"\"); }}>\r\n                        Back\r\n                    </Button>\r\n                </Col>\r\n                <Col xs lg=\"8\">\r\n\r\n\r\n                    {/* <LoadingModal show={loadingShow} text={'Generating video'} /> */}\r\n                    <Form onSubmit={handleSubmit} className='mb-4'>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <FloatingLabel label=\"Image 1 URL\">\r\n                                <Form.Control type=\"text\" placeholder=\"Image 1 URL\"\r\n                                    value={testVideo2.imageUrl1} onInput={e => setTestVideo2({ ...testVideo2, imageUrl1: e.target.value })} required />\r\n                            </FloatingLabel>\r\n\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <FloatingLabel label=\"Image 2 URL\">\r\n\r\n                            <Form.Control type=\"text\" placeholder=\"Image 2 URL\"\r\n                                value={testVideo2.imageUrl2} onInput={e => setTestVideo2({ ...testVideo2, imageUrl2: e.target.value })} required />\r\n                            </FloatingLabel>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col xs lg=\"3\">\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isGenerating} style={{ width: \"160px\" }}>\r\n                                    {isGenerating ? 'Generating video...' : 'Submit'}\r\n                                </Button>\r\n                            </Col>\r\n\r\n                            <Col className='mx-2'>\r\n                                <Form.Group>\r\n\r\n                                    <div className=\"form-check form-switch\">\r\n                                        <Form.Control className=\"form-check-input\" type=\"checkbox\" checked={testVideo2.checked}\r\n                                            onChange={(e) => setTestVideo2({ ...testVideo2, checked: e.currentTarget.checked })} />\r\n                                        <label className=\"form-check-label text-muted\">Add to results</label>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    </Form>\r\n\r\n\r\n                    <Row style={{ height: '400px' }}>\r\n                        <Col xs lg=\"4\">\r\n                            <img src={testVideo2.imageUrl1} style={{ width: \"90%\" }} alt=\"\" />\r\n\r\n                        </Col>\r\n                        <Col xs lg=\"4\">\r\n                            <img src={testVideo2.imageUrl2} style={{ width: \"90%\" }} alt=\"\" />\r\n\r\n                        </Col>\r\n                        <Col xs lg=\"4\">\r\n                            {testVideo2.videoData &&\r\n                                <video width=\"90%\" autoPlay loop>\r\n                                    <source src={testVideo2.videoData} type=\"video/mp4\"></source>\r\n                                </video>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {testVideo2.message &&\r\n\r\n                        <Alert variant={testVideo2.message['status']}>\r\n                            {testVideo2.message['message']}\r\n                        </Alert>\r\n                    }\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TestVideoDouble","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\nconst CompareTests = ({ token, setUserPageState }) => {\r\n\r\n    const [videosData, setVideosData] = useState([])\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function getVideos() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_test_videos`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setVideosData(resData['tests'])\r\n                setLoadingShow(false)\r\n\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n\r\n            }\r\n        }\r\n        getVideos();\r\n\r\n    }, [token]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Button variant=\"warning\" size=\"sm\" className='mt-2' onClick={() => { setUserPageState(\"\"); }}>\r\n                Back\r\n            </Button>\r\n\r\n\r\n            <Row className=\"mt-4\">\r\n\r\n                <LoadingModal show={loadingShow} text={'Fetching test pairs'} />\r\n                <Row style={{ height: '320px' }}>\r\n\r\n                    {videosData.map((item, i) =>\r\n                        <React.Fragment key={i}>\r\n                        \r\n                            <Col xs lg=\"6\">\r\n                                <Row className='gx-0'>\r\n                                    <div>{item.created_at}</div>\r\n                                    <Col xs lg=\"6\">\r\n                                        <img src={item.source_url} style={{ width: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"6\">\r\n                                        <video width=\"100%\" autoPlay loop>\r\n                                            <source src={item.result_url} type=\"video/mp4\"></source>\r\n                                        </video>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            {(i % 2 === 1) &&\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CompareTests","import React, { useState, useEffect } from 'react'\r\nimport LoadingModal from '../components/LoadingModal'\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\n\r\nconst CompareTestsDouble = ({ token, setUserPageState }) => {\r\n    const [videosData, setVideosData] = useState([])\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function getVideos() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_test_videos_double`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setVideosData(resData['tests'])\r\n                setLoadingShow(false)\r\n\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n\r\n            }\r\n        }\r\n        getVideos();\r\n\r\n    }, [token]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Button variant=\"warning\" size=\"sm\" className='mt-2' onClick={() => { setUserPageState(\"\"); }}>\r\n                Back\r\n            </Button>\r\n\r\n\r\n            <Row className=\"mt-4\">\r\n\r\n                <LoadingModal show={loadingShow} text={'Fetching test pairs'} />\r\n                <Row style={{ height: '320px' }}>\r\n\r\n                    {videosData.map((item, i) =>\r\n                        <React.Fragment key={i}>\r\n                        \r\n                            <Col xs lg=\"6\">\r\n                                <Row className='gx-0'>\r\n                                    <div>{item.created_at}</div>\r\n                                    <Col xs lg=\"4\">\r\n                                        <img src={item.source_url_1} style={{ maxHeight: \"100%\", maxWidth: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <img src={item.source_url_2} style={{ maxHeight: \"100%\", maxWidth: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <video width=\"100%\" autoPlay loop>\r\n                                            <source src={item.result_url} type=\"video/mp4\"></source>\r\n                                        </video>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            {(i % 2 === 1) &&\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                        \r\n\r\n                    )}\r\n\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default CompareTestsDouble","import React from 'react'\r\nimport { Button, Row, Col, Tab, Nav } from 'react-bootstrap'\r\n\r\nconst UserDefault = ({ setUserPageState, userData }) => {\r\n\r\n    return (\r\n        <div className='mt-5'>\r\n\r\n            {userData['userType'] === \"admin\" &&\r\n                <Row className=\"justify-content-md-center\" md=\"auto\"    >\r\n                    <Col>\r\n\r\n                        <>\r\n                            <Button variant=\"primary\" size=\"sm\" className='ms-3 me-1' onClick={() => { setUserPageState(\"testVideo\"); }}>\r\n                                Generate Videos (1 image)\r\n                            </Button>\r\n\r\n                            <Button variant=\"primary\" size=\"sm\" className='me-4 ms-1' onClick={() => { setUserPageState(\"compareTests\"); }}>\r\n                                Results\r\n                            </Button>\r\n\r\n                            <Button variant=\"primary\" size=\"sm\" className='ms-4 me-1' onClick={() => { setUserPageState(\"testVideoDouble\"); }}>\r\n                                Generate Videos (2 images)\r\n                            </Button>\r\n\r\n                            <Button variant=\"primary\" size=\"sm\" className='me-3 ms-1' onClick={() => { setUserPageState(\"compareTestsDouble\"); }}>\r\n                                Results\r\n                            </Button>\r\n\r\n                        </>\r\n\r\n                    </Col>\r\n                </Row>\r\n            }\r\n\r\n            <Row className=\"justify-content-md-center mt-4\" md=\"auto\"    >\r\n\r\n                <Col xs lg=\"6\">My feeds:\r\n\r\n                    {userData.userFeeds &&\r\n                        userData.userFeeds.map((feed, i) =>\r\n\r\n                            <div key={i}>{i}: {feed[2]}</div>\r\n                        )}\r\n                </Col>\r\n                <Col></Col>\r\n\r\n\r\n            </Row>\r\n            \r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UserDefault","import React, { useEffect, useState } from 'react';\r\nimport TestVideo from '../components/TestVideo';\r\nimport TestVideoDouble from '../components/TestVideoDouble';\r\n\r\nimport CompareTests from '../components/CompareTests';\r\nimport CompareTestsDouble from '../components/CompareTestsDouble';\r\n\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\nimport UserDefault from '../components/UserDefault';\r\nimport {logout} from '../utils.js'\r\n\r\n\r\nconst UserPage = ({ email, userPageState, setUserPageState, isGenerating, setIsGenerating,\r\n    testVideoData, setTestVideoData, testVideoDoubleData, setTestVideoDoubleData, setToastShow }) => {\r\n\r\n    // const [userPageState, setUserPageState] = useState(\"\")\r\n    const [userData, setUserData] = useState({\"userType\": \"\", \"userFeeds\": \"\"})\r\n    \r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n    \r\n    \r\n    const main = (userPageState) => {\r\n        switch (userPageState) {\r\n\r\n            case \"compareTests\":\r\n                return <CompareTests setUserPageState={setUserPageState} className='mt-4' />\r\n\r\n            case \"compareTestsDouble\":\r\n                return <CompareTestsDouble setUserPageState={setUserPageState} className='mt-4' />\r\n\r\n            case \"testVideo\":\r\n                return <TestVideo setUserPageState={setUserPageState} className='mt-4' isGenerating={isGenerating} setToastShow={setToastShow}\r\n                setIsGenerating={setIsGenerating}  testVideoData={testVideoData} setTestVideoData={setTestVideoData}/>\r\n            case \"testVideoDouble\":\r\n                return <TestVideoDouble setUserPageState={setUserPageState} className='mt-4' isGenerating={isGenerating} setToastShow={setToastShow}\r\n                setIsGenerating={setIsGenerating}  testVideo2={testVideoDoubleData} setTestVideo2={setTestVideoDoubleData}/>\r\n            default:\r\n                return <UserDefault setUserPageState={setUserPageState} className='mt-4' isGenerating={isGenerating} \r\n                setIsGenerating={setIsGenerating} email={email} userData={userData}/>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function getUser() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_user_info`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'user_token': sessionStorage.getItem('userToken'),\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-functions-key': sessionStorage.getItem('functions-key'),\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setUserData({\"userType\": resData[\"user_type\"], \"userFeeds\": resData[\"user_feed_data\"]})\r\n                setLoadingShow(false)\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n                // logout()\r\n\r\n            }\r\n        }\r\n        getUser();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <LoadingModal show={loadingShow} text={'Getting user data'} />\r\n            {main(userPageState)}\r\n        </div >\r\n    );\r\n};\r\nexport default UserPage;","import LoadingModal from '../components/LoadingModal';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, ListGroup } from 'react-bootstrap'\r\n\r\nconst MyFeedsPage = () => {\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n    const [userFeedsData, setUserFeedsData] = useState(false);\r\n    const [currentFeed, setCurrentFeed] = useState(0);\r\n\r\n   \r\n    useEffect(() => {\r\n        async function getUserFeeds() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_user_feed_data`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'user_token': sessionStorage.getItem('userToken'),\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-functions-key': sessionStorage.getItem('functions-key'),\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setUserFeedsData(resData['user_feed_data'])\r\n                console.log(resData['user_feed_data']);\r\n                setLoadingShow(false)\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n            }\r\n        }\r\n        getUserFeeds();\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            <LoadingModal show={loadingShow} text={'Getting user feed data.'} />\r\n\r\n\r\n            <Row className=\"justify-content-md-center mt-4\" md=\"auto\"    >\r\n\r\n                <Col xs lg=\"2\">\r\n\r\n                    <ListGroup>\r\n                        <ListGroup.Item >\r\n                            <strong>My Feeds: </strong>\r\n                        </ListGroup.Item>\r\n\r\n                        {userFeedsData &&\r\n                            userFeedsData.map((feed, i) =>\r\n                                <ListGroup.Item key={i} action active={currentFeed == i ? \"true\" : \"\"}\r\n                                 onClick={() => { setCurrentFeed(i); console.log(\"i\", i) }}>\r\n\r\n                                    <span key={i} > {feed['feed_name']}</span>\r\n\r\n                                </ListGroup.Item>\r\n\r\n                            )}\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col xs lg=\"6\">\r\n                        {userFeedsData && \r\n                        <>\r\n                        {userFeedsData[currentFeed]['feed_id']}\r\n                            \r\n                        {Object.values(userFeedsData[currentFeed]).map((element, i) =>\r\n                                    <div key={i}>\r\n\r\n                                        {element.toString().length < 50 ? element.toString() : element.toString().substring(0, 50) + '...'}</div>\r\n                                )}\r\n                        </>}\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyFeedsPage","import './App.css';\nimport React, { useState } from 'react'\nimport { logout } from './utils.js'\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Footer from './components/Footer'\nimport Header from './components/Header';\nimport MainPage from './pages/MainPage';\nimport CreateVideosPage from './pages/CreateVideosPage';\nimport CreateFeedPage from './pages/CreateFeedPage';\nimport LoginPage from './pages/LoginPage';\nimport UserPage from './pages/UserPage';\nimport MyFeedsPage from './pages/MyFeedsPage';\n\nimport { Toast } from 'react-bootstrap'\n\n\nconst checkAuth = () => {\n  if (sessionStorage.getItem('functions-key') && sessionStorage.getItem('userToken')) return true;\n\n  return false\n};\n\nconst getEmail = () => {\n  const emailString = sessionStorage.getItem('email');\n  return emailString\n};\n\nconst saveUserData = (funcKey, email, jwt) => {\n  sessionStorage.setItem('functions-key', funcKey);\n  sessionStorage.setItem('email', email);\n  sessionStorage.setItem('userToken', jwt);\n};\n\n\nfunction App() {\n  const [userPageState, setUserPageState] = useState(\"\")\n  const [isAuth, setIsAuth] = useState(checkAuth())\n  const [email, setEmail] = useState('')\n  const [isGenerating, setIsGenerating] = useState(false)\n\n  const [testVideoData, setTestVideoData] = useState({ \"imageType\": \"\", \"imageData\": \"\", \"videoData\": false, \"checked\": true, \"message\": false })\n  const [testVideoDoubleData, setTestVideoDoubleData] = useState({ \"imageUrl1\": \"\", \"imageUrl2\": \"\", \"videoData\": false, \"checked\": true, \"message\": false })\n\n  const [toastShow, setToastShow] = useState(false)\n\n\n  if (!isAuth) {\n    return (\n      <LoginPage email={email} setEmail={setEmail} saveUserData={saveUserData} setIsAuth={setIsAuth} />\n    )\n  }\n\n  else {\n    return (\n      <>\n\n        <Router>\n          <Header email={getEmail()} logout={logout} setUserPageState={setUserPageState} />\n\n          <Routes >\n            <Route path=\"\" element={<MainPage />} />\n            <Route path=\"createFeed\" element={<CreateFeedPage />} />\n\n            <Route path=\"createVideos\" element={<CreateVideosPage />} />\n            <Route path=\"user\" element={<UserPage email={getEmail()} testVideoData={testVideoData} setTestVideoData={setTestVideoData}\n              setUserPageState={setUserPageState} userPageState={userPageState} isGenerating={isGenerating} setIsGenerating={setIsGenerating}\n              testVideoDoubleData={testVideoDoubleData} setTestVideoDoubleData={setTestVideoDoubleData} setToastShow={setToastShow} />} />\n          \n            <Route path=\"myFeeds\" element={<MyFeedsPage />} />\n            \n          </Routes>\n\n          <Toast onClose={() => setToastShow(false)} show={toastShow} delay={6000} autohide bg=\"light\" className=\"m-2\"\n            style={{ position: \"fixed\", bottom: \"0\", right: \"0\" }}>\n            <Toast.Header>\n              <strong className=\"me-auto text-success\">Success</strong>\n              <small></small>\n            </Toast.Header>\n            <Toast.Body className=\"text-success\">Video generated successfully!</Toast.Body>\n          </Toast>\n\n          <Footer className=\"footer\" style={{ position: \"absolute\", bottom: \"0px\" }} />\n\n        </Router>\n\n\n\n        {isGenerating &&\n          <div className='p-1 btn btn-outline-primary disabled m-2' style={{ position: \"fixed\", bottom: \"0\", right: \"0\" }}>\n            Generating video...\n          </div>\n        }\n\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}