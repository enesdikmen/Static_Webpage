{"version":3,"sources":["components/Header.js","pages/MainPage.js","pages/CreateVideosPage.js","components/CreateFeedForm.js","components/ConfirmModal.js","components/ArrangeFeed.js","components/Loading.js","components/PreviewFeed.js","utils.js","components/ArrangeVisuals.js","pages/CreateFeedPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","MainPage","Row","Col","lg","CreateVideosPage","CreateFeedForm","setCreateFeedState","setAlertState","setData","useState","userName","setUserName","feedName","setFeedName","feedURL","setFeedURL","handleSubmit","a","show","text","fetch","URLSearchParams","method","headers","res","json","data","ok","Form","onSubmit","e","preventDefault","Group","Label","Control","required","type","placeholder","value","onInput","target","Button","ConfirmModal","title","buttonText","handleClose","handleConfirm","Modal","onHide","closeButton","Title","Body","Footer","onClick","ArrangeFeed","feedData","ImgUrl","setImgUrl","setTitle","setBody","WebUrl","setWebUrl","colOptions","modalShow","setModalShow","console","log","body","JSON","stringify","feed_name","feed_url","resData","map","colOption","i","Fragment","controlId","column","sm","col","Select","get","onChange","set","disabled","col_names","colName","Table","striped","bordered","hover","size","feed_data","feed","Object","values","element","toString","length","substring","Loading","height","width","style","Spinner","animation","role","PreviewFeed","handleGenerate","res2","src","getPreviewVideo","res2Data","ArrangeVisuals","handleClick","CreateFeedPage","CreateFeedState","AlertState","Data","Progress","setProgress","useEffect","header","ProgressBar","now","percent","label","Alert","visibility","main","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4763fabc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">AdVideoMaker</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        \r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/createFeed\">Create Feed</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/createVideos\">Create Videos</Nav.Link>\r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                    </Nav>\r\n                    {/* <Nav>\r\n                        <Nav.Link as={Link} to=\"/\" eventKey={1}>PlaceHolder1</Nav.Link>\r\n                        <Nav.Link eventKey={2} as={Link} to=\"/\">\r\n                            PlaceHolder2\r\n                        </Nav.Link>\r\n                    </Nav> */}\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Main Page</strong> <span></span>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { useState }  from 'react'\r\nconst CreateVideosPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create Videos</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateVideosPage\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst CreateFeedForm = ({ setCreateFeedState, setAlertState, setData }) => {\r\n\r\n    const [userName, setUserName] = useState('')\r\n    const [feedName, setFeedName] = useState('')\r\n    const [feedURL, setFeedURL] = useState('https://docs.google.com/spreadsheets/d/e/2PACX-1vQvm265NJfQjH0GtMLNRD7rJIA5vapYsz1BbIEsmdOYJGuvWlfARCYwy3SS9BmVGGOJ4-MGhcoO7h8w/pub?gid=0&single=true&output=csv')\r\n\r\n\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n\r\n        if(userName != 'arge1234'){\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: \"Invalid username.\" })\r\n\r\n        }\r\n        \r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/check_feed?` + new URLSearchParams({ feedURL: feedURL }), {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n\r\n            },\r\n        })\r\n\r\n        let data = await res.json();\r\n        if (res.ok) {\r\n            data['feed_name'] = feedName;\r\n            setData(data);\r\n            setCreateFeedState(\"arrangeFeed\");\r\n\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: data['detail'] })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Form onSubmit={e => { openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={e => { handleSubmit(); e.preventDefault(); }}>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Provide Username</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"\"\r\n                        value={userName} onInput={e => setUserName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed Name</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Enter a name for your feed.\"\r\n                        value={feedName} onInput={e => setFeedName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed URL</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter feed URL.\"\r\n                        value={feedURL} onInput={e => setFeedURL(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type='submit'>Submit</Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateFeedForm\r\n","import { Modal, Button } from 'react-bootstrap'\r\nimport React from 'react'\r\n\r\nconst ConfirmModal = ({ show, title, text, buttonText,\r\n    handleClose, handleConfirm }) => {\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{text}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => { handleConfirm(); handleClose(); }}>\r\n                    {buttonText}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmModal\r\n","import React, { useState } from 'react'\r\nimport { Form, Row, Col, Table, Button} from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\nconst ArrangeFeed = ({ setCreateFeedState, setAlertState, feedData, setData }) => {\r\n\r\n\r\n    const [ImgUrl, setImgUrl] = useState(false)\r\n    const [Title, setTitle] = useState(false)\r\n    const [Body, setBody] = useState(false)\r\n    const [WebUrl, setWebUrl] = useState(false)\r\n\r\n    const colOptions = [{\"col\":\"Image URL\", \"set\": setImgUrl, \"get\": ImgUrl}, \r\n                        {\"col\": \"Title\", \"set\": setTitle, \"get\": Title}, \r\n                        {\"col\": \"Body\", \"set\": setBody, \"get\": Body}, \r\n                        {\"col\": \"Website URL\", \"set\": setWebUrl, \"get\": WebUrl}];\r\n    \r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    let handleSaveClick = (e) => {\r\n\r\n        console.log(\"in save clikc\");\r\n        if(ImgUrl && Title && Body && WebUrl){\r\n            openModal(); \r\n            console.log(\"in if\");\r\n\r\n        }\r\n        else{\r\n            console.log(\"in else\");\r\n\r\n            setAlertState({ show: true, text: \"Please fill all of the fields first.\" })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n        console.log(ImgUrl, Title, Body, WebUrl)\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/create_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'user_id': 1,\r\n                'feed_name': feedData.feed_name,\r\n                'feed_url': feedData.feed_url,\r\n                'img_url_col': ImgUrl,\r\n                'title_col': Title,\r\n                'site_url_col': WebUrl,\r\n                'body_col': Body,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            console.log(\"feedData\",feedData);\r\n            console.log(\"return data\",resData);\r\n\r\n            // data[\"first_rows\"] = feedData.feed_data.data;\r\n            feedData[\"title_col\"] = resData[\"title_col\"]\r\n            feedData[\"site_url_col\"] = resData[\"site_url_col\"]\r\n            feedData[\"img_url_col\"] = resData[\"img_url_col\"]\r\n            feedData[\"body_col\"] = resData[\"body_col\"]\r\n            feedData[\"feed_id\"] = resData[\"feed_id\"]\r\n            \r\n            setData(feedData)\r\n            setCreateFeedState(\"arrangeVisuals\");\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: resData['detail'] })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Form onSubmit={e => {openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={handleSaveClick}>\r\n\r\n                <Row>\r\n                    {colOptions.map((colOption, i) =>\r\n                        <React.Fragment key={i}>\r\n                            <Col>\r\n                                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={4} className='text-end fw-bold'>\r\n                                        {colOption.col}\r\n                                    </Form.Label>\r\n                                    <Col sm={8}>\r\n\r\n                                        {/* <Form.Select aria-label=\"Default select example\" onChange={e => setColMatches(state => (state[colOption] = e.target.value))}> */}\r\n                                        {/* <Form.Select aria-label=\"Default select example\"  value={colOption.get} onChange={(e)=>{colOption.set(e)}}> */}\r\n                                        <Form.Select aria-label=\"Default select example\" value={colOption.get}   onChange={(e)=>{colOption.set(e.target.value)}}>\r\n                                            <option disabled value={false}>Select..</option>\r\n                                            \r\n                                            {feedData.col_names.map((colName, i) =>\r\n\r\n                                                <option key={i} value={colName}>{colName}</option>\r\n\r\n                                            )}\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            {(i % 2 === 1) &&\r\n\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                    )}\r\n                </Row>\r\n                <Button variant=\"primary\" type='submit'>Save</Button>\r\n\r\n            </Form>\r\n            <div className='mt-4'>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            {feedData.col_names.map((colName, i) =>\r\n                                <th key={i}>{colName}</th>\r\n\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {feedData.feed_data.data.map((feed, i) =>\r\n                            <tr key={i}>\r\n                                {/* 50 den buyuk karakterli satırlar için hepsini yazdırma */}\r\n                                {Object.values(feed).map((element, i) =>\r\n                                    <td key={i}>\r\n\r\n                                        {element.toString().length < 50 ? element : element.toString().substring(0, 50) + '...'}</td>\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to create a new feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleSubmit} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ArrangeFeed\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = ({height=100, width=200}) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{height: height +\"px\", width: width +\"px\"}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\n\r\nconst PreviewFeed = ({ setCreateFeedState, setAlertState, feedData, setData }) => {\r\n    console.log(\"here is preview data:\", feedData);\r\n    \r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    \r\n    let confirmGenerate = (e) => {\r\n        openModal();\r\n    }\r\n\r\n    let handleGenerate = async () => {  \r\n\r\n        setCreateFeedState(\"loading\")\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'feed_id': feedData['feed_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        })\r\n    \r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video_feed`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'video_ids': resData['video_ids'],\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                },\r\n            })\r\n        \r\n            let res2Data = await res2.json();\r\n            if (res2.ok) {\r\n                setCreateFeedState(\"success\")\r\n\r\n                return\r\n\r\n\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        else {\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* <video width=\"320\" height=\"240\" autoPlay loop>\r\n                <source src={feedData['previewVideoUrl']} type=\"video/mp4\"></source>\r\n            </video> */}\r\n            <div>\r\n\r\n            <img width=\"320\" src={feedData['previewVideoUrl']} />\r\n            </div>\r\n            <Button variant=\"primary\" onClick={confirmGenerate}>Start Generating Videos</Button>\r\n\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to start generating videos from this feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleGenerate} />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PreviewFeed\r\n","export const  getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport const getPreviewVideo = async (feedData) => {\r\n\r\n    let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            'user_id': 1,\r\n            'feed_id': feedData['feed_id'],\r\n            'img_url': feedData['feed_data']['data'][0][feedData['img_url_col']],\r\n            'title': feedData['feed_data']['data'][0][feedData['title_col']],\r\n            'body': feedData['feed_data']['data'][0][feedData['body_col']],\r\n            'site_url': feedData['feed_data']['data'][0][feedData['site_url_col']],\r\n\r\n\r\n\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n    })\r\n\r\n    let resData = await res.json();\r\n    if (res.ok) {\r\n        let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'video_id': resData['video_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        })\r\n    \r\n        let res2Data = await res2.json();\r\n        if (res2.ok) {\r\n            return res2Data['result_url']\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    else {\r\n    }\r\n    \r\n}\r\n\r\n\r\n// import { getCookie } from '../utils'\r\n// var csrftoken = getCookie('csrftoken');","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport {getPreviewVideo} from '../utils.js'\r\n\r\nconst ArrangeVisuals = ({ setCreateFeedState, setAlertState, feedData, setData }) => {\r\n    console.log(\"visuals data:\", feedData);\r\n    const handleClick = async (e) => {\r\n        setCreateFeedState(\"loading\")\r\n        feedData['previewVideoUrl'] = await getPreviewVideo(feedData)\r\n\r\n        setData(feedData)\r\n        console.log(\"url: \", feedData['previewVideoUrl']);\r\n\r\n        setCreateFeedState(\"preview\")\r\n    }\r\n    return (\r\n        <div>\r\n\r\n\r\n            <p> Pick a theme </p>\r\n            <p> Pick a color etc...</p>\r\n            <Button variant=\"primary\" onClick={handleClick}>Continue</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArrangeVisuals\r\n","import React, { useState, useEffect} from 'react'\r\nimport { Container, Alert, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport CreateFeedForm from '../components/CreateFeedForm'\r\nimport ArrangeFeed from '../components/ArrangeFeed'\r\nimport Loading from '../components/Loading'\r\nimport PreviewFeed from '../components/PreviewFeed'\r\nimport ArrangeVisuals from '../components/ArrangeVisuals'\r\nconst CreateFeedPage = () => {\r\n\r\n    const [CreateFeedState, setCreateFeedState] = useState(\"checkURL\")\r\n\r\n    const [AlertState, setAlertState] = useState({ show: false, text: \"\" })\r\n    const [Data, setData] = useState({})\r\n    const [Progress, setProgress] = useState({\"percent\": 10, \"label\": \"1/5\"})\r\n    \r\n    useEffect(() => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                setProgress({\"percent\": 10, \"label\": \"1/5\"});\r\n                break;\r\n            case \"arrangeFeed\":\r\n                setProgress({\"percent\": 35, \"label\": \"2/5\"});\r\n                break;\r\n            case \"arrangeVisuals\":\r\n                setProgress({\"percent\": 60, \"label\": \"3/5\"});\r\n                break;\r\n            case \"preview\":\r\n                setProgress({\"percent\": 85, \"label\": \"4/5\"});\r\n                break;\r\n            case \"success\":\r\n                setProgress({\"percent\": 100, \"label\": \"5/5\"});\r\n                break;\r\n            case \"loading\":\r\n                break;\r\n            default:\r\n                return \"\"\r\n        }\r\n\r\n        return () => {\r\n        }\r\n    }, [CreateFeedState])\r\n\r\n    const header = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return \"Provide a URL\"\r\n            case \"arrangeFeed\":\r\n                return Data.feed_name + \" - Match the columns\"\r\n            case \"arrangeVisuals\":\r\n                return Data.feed_name + \" - Arrange Visuals\"\r\n            case \"preview\":\r\n                return Data.feed_name + \" - Video Preview\"\r\n            case \"loading\":\r\n                return \"\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const main = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} />\r\n            case \"arrangeFeed\":\r\n                return <ArrangeFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} />\r\n\r\n            case \"arrangeVisuals\":\r\n                return <ArrangeVisuals setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} />\r\n            case \"preview\":\r\n                return <PreviewFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} />\r\n\r\n            case \"success\":\r\n                return <div className='fs-5'>\r\n                        Videos successfully generated.                  \r\n                    </div>\r\n            case \"loading\":\r\n                return <Loading width={300} height={200} />\r\n            default:\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Create a new feed:</strong> <span>{header(CreateFeedState)}</span>\r\n                        </div>\r\n                        <ProgressBar className='fs-5 fw-bold' style={{height: '25px'}} striped variant=\"info\" now={Progress.percent} label={Progress.label} />\r\n                        <Alert className='mt-2' variant='danger' style={{ visibility: AlertState.show ? 'visible' : 'hidden', height: \"50px\" }}>\r\n                            {AlertState.text}\r\n                        </Alert>\r\n                        {main(CreateFeedState)}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFeedPage\r\n","import './App.css';\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Routes,\n  Route\n}  from \"react-router-dom\";\nimport Header from './components/Header';\nimport MainPage from './pages/MainPage';\nimport CreateVideosPage from './pages/CreateVideosPage';\nimport CreateFeedPage from './pages/CreateFeedPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path=\"\" element={ <MainPage/> } />\n        <Route path=\"createFeed\" element={<CreateFeedPage/>} />\n\n        <Route path=\"createVideos\" element={<CreateVideosPage/>}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}