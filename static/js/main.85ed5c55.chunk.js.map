{"version":3,"sources":["components/Header.js","pages/MainPage.js","pages/CreateVideosPage.js","components/CreateFeedForm.js","components/ConfirmModal.js","components/ArrangeFeed.js","components/Loading.js","components/PreviewFeed.js","utils.js","components/ArrangeVisuals.js","pages/CreateFeedPage.js","components/LoadingModal.js","pages/LoginPage.js","components/TestVideo.js","components/TestVideoDouble.js","components/CompareTests.js","components/CompareTestsDouble.js","components/UserDefault.js","pages/UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","email","logout","setUserPageState","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","onClick","MainPage","Row","Col","lg","CreateVideosPage","CreateFeedForm","setCreateFeedState","setAlertState","setData","token","useState","feedName","setFeedName","feedURL","setFeedURL","handleSubmit","a","show","text","fetch","URLSearchParams","method","headers","sessionStorage","getItem","res","json","data","ok","Form","onSubmit","e","preventDefault","Group","Label","Control","required","type","placeholder","value","onInput","target","Button","ConfirmModal","title","buttonText","handleClose","handleConfirm","Modal","onHide","closeButton","Title","Body","Footer","ArrangeFeed","feedData","ImgUrl","setImgUrl","setTitle","setBody","WebUrl","setWebUrl","colOptions","modalShow","setModalShow","body","JSON","stringify","feed_name","feed_url","resData","map","colOption","i","Fragment","column","sm","col","Select","get","onChange","set","disabled","col_names","colName","Table","striped","bordered","hover","size","feed_data","feed","Object","values","element","toString","length","substring","Loading","height","width","style","Spinner","animation","role","PreviewFeed","handleGenerate","res2","autoPlay","loop","src","getPreviewVideo","res2Data","ArrangeVisuals","handleClick","resp","stat","url","detail","CreateFeedPage","CreateFeedState","AlertState","Data","Progress","setProgress","useEffect","header","ProgressBar","now","percent","label","Alert","visibility","main","LoadingModal","LoginPage","password","setEmail","setPassword","saveToken","setToken","loadingShow","setLoadingShow","controlId","TestVideo","isGenerating","setIsGenerating","testVideoData","setTestVideoData","start","window","performance","videoData","message","imageData","split","imageType","checked","end","toFixed","status","xs","accept","files","reader","FileReader","onload","frEvent","result","readAsDataURL","currentTarget","alt","TestVideoDouble","testVideo2","setTestVideo2","imageUrl1","imageUrl2","FloatingLabel","CompareTests","videosData","setVideosData","getVideos","item","created_at","source_url","result_url","CompareTestsDouble","source_url_1","maxHeight","maxWidth","source_url_2","UserDefault","userType","md","UserPage","userPageState","setUserType","testVideoDoubleData","setTestVideoDoubleData","getUser","getToken","getEmail","userToken","setItem","removeItem","location","reload","App","path","position","bottom","right","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ed5c55.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Header = ({email, logout, setUserPageState}) => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">AdVideoMaker</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        \r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/createFeed\">Create Feed</Nav.Link>\r\n                        {/* <Nav.Link as={Link} to=\"/createVideos\">Create Videos</Nav.Link> */}\r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                    </Nav>\r\n                    {/* <Nav>\r\n                        <Nav.Link as={Link} to=\"/\" eventKey={1}>PlaceHolder1</Nav.Link>\r\n                        <Nav.Link eventKey={2} as={Link} to=\"/\">\r\n                            PlaceHolder2\r\n                        </Nav.Link>\r\n                    </Nav> */}\r\n                    <Nav>\r\n                        <Nav.Link onClick={() => {setUserPageState(\"\")}} as={Link} to=\"/user\">\r\n                            {email}\r\n                        </Nav.Link>\r\n                        <Nav.Link onClick={logout}>\r\n                            Log Out\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Main Page</strong> <span></span>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { }  from 'react'\r\nconst CreateVideosPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create Videos</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateVideosPage\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst CreateFeedForm = ({ setCreateFeedState, setAlertState, setData, token }) => {\r\n    const [feedName, setFeedName] = useState('')\r\n    const [feedURL, setFeedURL] = useState('https://docs.google.com/spreadsheets/d/e/2PACX-1vQvm265NJfQjH0GtMLNRD7rJIA5vapYsz1BbIEsmdOYJGuvWlfARCYwy3SS9BmVGGOJ4-MGhcoO7h8w/pub?gid=0&single=true&output=csv')\r\n\r\n\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/check_feed?` + new URLSearchParams({ feedURL: feedURL }), {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key'),\r\n\r\n\r\n            },\r\n        })\r\n\r\n        let data = await res.json();\r\n        if (res.ok) {\r\n            data['feed_name'] = feedName;\r\n            setData(data);\r\n            setCreateFeedState(\"arrangeFeed\");\r\n\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: data['detail'] })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Form onSubmit={e => { openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={e => { handleSubmit(); e.preventDefault(); }}>\r\n                \r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed Name</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Enter a name for your feed.\"\r\n                        value={feedName} onInput={e => setFeedName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed URL</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter feed URL.\"\r\n                        value={feedURL} onInput={e => setFeedURL(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type='submit'>Submit</Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateFeedForm\r\n","import { Modal, Button } from 'react-bootstrap'\r\nimport React from 'react'\r\n\r\nconst ConfirmModal = ({ show, title, text, buttonText,\r\n    handleClose, handleConfirm }) => {\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{text}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => { handleConfirm(); handleClose(); }}>\r\n                    {buttonText}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmModal\r\n","import React, { useState } from 'react'\r\nimport { Form, Row, Col, Table, Button} from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\nconst ArrangeFeed = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n\r\n\r\n    const [ImgUrl, setImgUrl] = useState(false)\r\n    const [Title, setTitle] = useState(false)\r\n    const [Body, setBody] = useState(false)\r\n    const [WebUrl, setWebUrl] = useState(false)\r\n\r\n    const colOptions = [{\"col\":\"Image URL\", \"set\": setImgUrl, \"get\": ImgUrl}, \r\n                        {\"col\": \"Title\", \"set\": setTitle, \"get\": Title}, \r\n                        {\"col\": \"Body\", \"set\": setBody, \"get\": Body}, \r\n                        {\"col\": \"Website URL\", \"set\": setWebUrl, \"get\": WebUrl}];\r\n    \r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    let handleSaveClick = (e) => {\r\n\r\n        if(ImgUrl && Title && Body && WebUrl){\r\n            openModal(); \r\n        }\r\n        else{\r\n            setAlertState({ show: true, text: \"Please fill all of the fields first.\" })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/create_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'user_id': 1,\r\n                'feed_name': feedData.feed_name,\r\n                'feed_url': feedData.feed_url,\r\n                'img_url_col': ImgUrl,\r\n                'title_col': Title,\r\n                'site_url_col': WebUrl,\r\n                'body_col': Body,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n\r\n            // data[\"first_rows\"] = feedData.feed_data.data;\r\n            feedData[\"title_col\"] = resData[\"title_col\"]\r\n            feedData[\"site_url_col\"] = resData[\"site_url_col\"]\r\n            feedData[\"img_url_col\"] = resData[\"img_url_col\"]\r\n            feedData[\"body_col\"] = resData[\"body_col\"]\r\n            feedData[\"feed_id\"] = resData[\"feed_id\"]\r\n            \r\n            setData(feedData)\r\n            setCreateFeedState(\"arrangeVisuals\");\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: resData['detail'] })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Form onSubmit={e => {openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={handleSaveClick}>\r\n\r\n                <Row>\r\n                    {colOptions.map((colOption, i) =>\r\n                        <React.Fragment key={i}>\r\n                            <Col>\r\n                                <Form.Group as={Row} className=\"mb-3\">\r\n                                    <Form.Label column sm={4} className='text-end fw-bold'>\r\n                                        {colOption.col}\r\n                                    </Form.Label>\r\n                                    <Col sm={8}>\r\n\r\n                                        {/* <Form.Select aria-label=\"Default select example\" onChange={e => setColMatches(state => (state[colOption] = e.target.value))}> */}\r\n                                        {/* <Form.Select aria-label=\"Default select example\"  value={colOption.get} onChange={(e)=>{colOption.set(e)}}> */}\r\n                                        <Form.Select aria-label=\"Default select example\" value={colOption.get}   onChange={(e)=>{colOption.set(e.target.value)}}>\r\n                                            <option disabled value={false}>Select..</option>\r\n                                            \r\n                                            {feedData.col_names.map((colName, i) =>\r\n\r\n                                                <option key={i} value={colName}>{colName}</option>\r\n\r\n                                            )}\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            {(i % 2 === 1) &&\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                    )}\r\n                </Row>\r\n                <Button variant=\"primary\" type='submit'>Save</Button>\r\n\r\n            </Form>\r\n            <div className='mt-4'>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            {feedData.col_names.map((colName, i) =>\r\n                                <th key={i}>{colName}</th>\r\n\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {feedData.feed_data.data.map((feed, i) =>\r\n                            <tr key={i}>\r\n                                {/* 50 den buyuk karakterli satırlar için hepsini yazdırma */}\r\n                                {Object.values(feed).map((element, i) =>\r\n                                    <td key={i}>\r\n\r\n                                        {element.toString().length < 50 ? element : element.toString().substring(0, 50) + '...'}</td>\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to create a new feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleSubmit} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ArrangeFeed\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = ({height=100, width=200}) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{height: height +\"px\", width: width +\"px\"}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\n\r\nconst PreviewFeed = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n    \r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    \r\n    let confirmGenerate = (e) => {\r\n        openModal();\r\n    }\r\n\r\n    let handleGenerate = async () => {  \r\n\r\n        setCreateFeedState(\"loading\")\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'feed_id': feedData['feed_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n\r\n\r\n            },\r\n        })\r\n    \r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video_feed`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'video_ids': resData['video_ids'],\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n\r\n                },\r\n            })\r\n        \r\n            let res2Data = await res2.json();\r\n            if (res2.ok) {\r\n                setCreateFeedState(\"success\")\r\n\r\n                return\r\n\r\n\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        else {\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <video width=\"320\" height=\"240\" autoPlay loop>\r\n                <source src={feedData['previewVideoUrl']} type=\"video/mp4\"></source>\r\n            </video>\r\n            <div>\r\n\r\n            {/* <img width=\"320\" src={feedData['previewVideoUrl']} /> */}\r\n            </div>\r\n\r\n            \r\n            <Button variant=\"primary\" onClick={confirmGenerate}>Start Generating Videos</Button>\r\n\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to start generating videos from this feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleGenerate} />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PreviewFeed\r\n","export const  getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport const getPreviewVideo = async (feedData, token) => {\r\n\r\n    let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            'user_id': 1,\r\n            'feed_id': feedData['feed_id'],\r\n            'img_url': feedData['feed_data']['data'][0][feedData['img_url_col']],\r\n            'title': feedData['feed_data']['data'][0][feedData['title_col']],\r\n            'body': feedData['feed_data']['data'][0][feedData['body_col']],\r\n            'site_url': feedData['feed_data']['data'][0][feedData['site_url_col']],\r\n\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'x-functions-key': sessionStorage.getItem('functions-key')\r\n        },\r\n    })\r\n\r\n    let resData = await res.json();\r\n    if (res.ok) {\r\n        let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'video_id': resData['video_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n\r\n            },\r\n        })\r\n    \r\n        let res2Data = await res2.json();\r\n        if (res2.ok) {\r\n            return {\"stat\": true, \"url\": res2Data['result_url']}\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    else {\r\n        return {\"stat\": false, \"detail\": \"Invalid values in first row of the feed. Check again\"}\r\n    }\r\n    \r\n}\r\n\r\n\r\n// import { getCookie } from '../utils'\r\n// var csrftoken = getCookie('csrftoken');","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport {getPreviewVideo} from '../utils.js'\r\n\r\nconst ArrangeVisuals = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n    const handleClick = async (e) => {\r\n        setCreateFeedState(\"loading\")\r\n        \r\n        let resp = await getPreviewVideo(feedData, token)\r\n        if(resp.stat){\r\n            feedData['previewVideoUrl'] = resp.url\r\n            setData(feedData)\r\n            setCreateFeedState(\"preview\")\r\n        }\r\n        else{\r\n            setCreateFeedState(\"arrangeFeed\")\r\n            setAlertState({ show: true, text: resp.detail })\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n\r\n            <p> Pick a theme </p>\r\n            <p> Pick a color etc...</p>\r\n            <Button variant=\"primary\" onClick={handleClick}>Continue</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArrangeVisuals\r\n","import React, { useState, useEffect} from 'react'\r\nimport { Container, Alert, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport CreateFeedForm from '../components/CreateFeedForm'\r\nimport ArrangeFeed from '../components/ArrangeFeed'\r\nimport Loading from '../components/Loading'\r\nimport PreviewFeed from '../components/PreviewFeed'\r\nimport ArrangeVisuals from '../components/ArrangeVisuals'\r\nconst CreateFeedPage = ({token}) => {\r\n    const [CreateFeedState, setCreateFeedState] = useState(\"checkURL\")\r\n\r\n    const [AlertState, setAlertState] = useState({ show: false, text: \"\" })\r\n    const [Data, setData] = useState({})\r\n    const [Progress, setProgress] = useState({\"percent\": 10, \"label\": \"1/5\"})\r\n    \r\n    useEffect(() => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                setProgress({\"percent\": 10, \"label\": \"1/5\"});\r\n                break;\r\n            case \"arrangeFeed\":\r\n                setProgress({\"percent\": 35, \"label\": \"2/5\"});\r\n                break;\r\n            case \"arrangeVisuals\":\r\n                setProgress({\"percent\": 60, \"label\": \"3/5\"});\r\n                break;\r\n            case \"preview\":\r\n                setProgress({\"percent\": 85, \"label\": \"4/5\"});\r\n                break;\r\n            case \"success\":\r\n                setProgress({\"percent\": 100, \"label\": \"5/5\"});\r\n                break;\r\n            case \"loading\":\r\n                break;\r\n            default:\r\n                return \"\"\r\n        }\r\n\r\n        return () => {\r\n        }\r\n    }, [CreateFeedState])\r\n\r\n    const header = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return \"Provide a URL\"\r\n            case \"arrangeFeed\":\r\n                return Data.feed_name + \" - Match the columns\"\r\n            case \"arrangeVisuals\":\r\n                return Data.feed_name + \" - Arrange Visuals\"\r\n            case \"preview\":\r\n                return Data.feed_name + \" - Video Preview\"\r\n            case \"loading\":\r\n                return \"\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const main = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} token={token}/>\r\n            case \"arrangeFeed\":\r\n                return <ArrangeFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} token={token}/>\r\n\r\n            case \"arrangeVisuals\":\r\n                return <ArrangeVisuals setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} token={token}/>\r\n            case \"preview\":\r\n                return <PreviewFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} token={token}/>\r\n\r\n            case \"success\":\r\n                return <div className='fs-5'>\r\n                        Videos successfully generated.                  \r\n                    </div>\r\n            case \"loading\":\r\n                return <Loading width={300} height={200} />\r\n            default:\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} token={token}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Create a new feed:</strong> <span>{header(CreateFeedState)}</span>\r\n                        </div>\r\n                        <ProgressBar className='fs-5 fw-bold' style={{height: '25px'}} striped variant=\"info\" now={Progress.percent} label={Progress.label} />\r\n                        <Alert className='mt-2' variant='danger' style={{ visibility: AlertState.show ? 'visible' : 'hidden', height: \"50px\" }}>\r\n                            {AlertState.text}\r\n                        </Alert>\r\n                        {main(CreateFeedState)}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFeedPage\r\n","import React from 'react'\r\nimport { Modal} from 'react-bootstrap'\r\nimport Loading from '../components/Loading'\r\n\r\nconst LoadingModal = ({show, text}) => {\r\n    return (\r\n        <Modal show={show} size=\"sm\">\r\n            <Modal.Body  className='text-center' style={{height: \"150px\"}}>\r\n                {text}\r\n                <Loading width={260} height={100} />\r\n            \r\n            \r\n            </Modal.Body>\r\n            \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default LoadingModal","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\n\r\nconst LoginPage = ({ email, password, setEmail, setPassword, saveToken, setToken }) => {\r\n\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    let handleSubmit = async (e) => {\r\n\r\n        setLoadingShow(true)\r\n\r\n        e.preventDefault();\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/authenticate`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'email': email,\r\n                'password': password,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n\r\n        if (res.ok) {\r\n\r\n            saveToken(resData['key'], email)\r\n            setToken(resData['key'])\r\n            setLoadingShow(false)\r\n\r\n        }\r\n        else {\r\n            setLoadingShow(false)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <LoadingModal show={loadingShow} text={'Logging in...'} />\r\n\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"5\">\r\n                        <Form onSubmit={handleSubmit} className='mt-4'>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onInput={e => setEmail(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onInput={e => setPassword(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container, Alert } from 'react-bootstrap'\r\n\r\n\r\nconst TestVideo = ({ token, setUserPageState, isGenerating, setIsGenerating,\r\n     testVideoData, setTestVideoData }) => {\r\n\r\n\r\n\r\n\r\n    let handleImage = (e) => {\r\n        if(!e.target.files[0]) return;\r\n\r\n\r\n        var reader = new FileReader();\r\n        reader.onload = function (frEvent) {\r\n\r\n            // var image = new Image();\r\n            // image.onload = function (imageEvent) {\r\n\r\n            //     // Resize the image\r\n            //     var canvas = document.createElement('canvas'),\r\n            //         y_offset = 0,\r\n            //         x_offset = 0,\r\n            //         set_width = 256,\r\n            //         set_height = 256,\r\n            //         img_width = image.width,\r\n            //         img_height = image.height;\r\n\r\n            //     if (img_width > img_height) {\r\n            //         x_offset = (img_width - img_height) / 2\r\n            //     } else {\r\n            //         y_offset = (img_height - img_width) / 2\r\n            //     }\r\n\r\n            //     canvas.width = set_width;\r\n            //     canvas.height = set_height;\r\n            //     canvas.getContext('2d').drawImage(image, x_offset, y_offset, img_width - x_offset * 2, img_height - y_offset * 2,\r\n            //         0, 0, set_width, set_height);\r\n            //     var dataUrl = canvas.toDataURL('image/jpeg');\r\n            //     setImageData(dataUrl)\r\n\r\n            // }\r\n            // image.src = frEvent.target.result;\r\n\r\n\r\n            setTestVideoData({...testVideoData, imageData: frEvent.target.result})\r\n        }\r\n\r\n        setTestVideoData({...testVideoData, imageType: e.target.files[0].type})\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    let handleSubmit = async (e) => {\r\n        setIsGenerating(true)\r\n        e.preventDefault();\r\n        var start = window.performance.now();\r\n\r\n        setTestVideoData({...testVideoData, videoData: false, message: false})\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/test_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'image_data': testVideoData.imageData.split(\",\", 2)[1],\r\n                'image_type': testVideoData.imageType,\r\n                'is_save': testVideoData.checked\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            \r\n            var end = window.performance.now();\r\n            setTestVideoData({...testVideoData, videoData: resData['result_url'],\r\n            message: {\"status\": \"success\", \"message\": \"Video successfully generated in \" +((end - start) / 1000).toFixed(2) + \" seconds. \"\r\n         + \"Shoe counts, tensorflow: \" + resData['shoe-count-tensorflow'] + \" mediapipe: \"  + resData['shoe-count-mediapipe'] }})\r\n\r\n            setIsGenerating(false)\r\n        }\r\n        else {\r\n\r\n\r\n            if(res.status === 404){\r\n                setTestVideoData({...testVideoData, message: {\"status\": \"danger\", \"message\": resData['detail'], \"time\": \"\"}})\r\n            }\r\n            else{\r\n                setTestVideoData({...testVideoData, message: {\"status\": \"danger\", \"message\": \"Error code: \"+ (res.status).toString(), \"time\": \"\"}})\r\n            }\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{}}>\r\n            <Row className=\"mt-4\">\r\n\r\n                <Col xs lg=\"2\" >\r\n                    <Button variant=\"warning\" size=\"sm\" className='' onClick={() => { setUserPageState(\"\"); }}>\r\n                        Back\r\n                    </Button>\r\n                </Col>\r\n                <Col xs lg=\"8\">\r\n\r\n\r\n                    {/* <LoadingModal show={loadingShow} text={'Generating video'} /> */}\r\n                    <Form onSubmit={handleSubmit} className='mb-4'>\r\n                        <Row className='mb-1'>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImage} required/>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col xs lg=\"4\">\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isGenerating} style={{width: \"160px\"}}>\r\n                                    {isGenerating ? 'Generating video...' : 'Submit'}\r\n\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs lg=\"1\">\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group>\r\n\r\n                                <div className=\"form-check form-switch\">\r\n                                    <Form.Control className=\"form-check-input\" type=\"checkbox\" checked={testVideoData.checked}\r\n                                        onChange={(e) => setTestVideoData({...testVideoData, checked: e.currentTarget.checked})}/>\r\n                                    <label className=\"form-check-label text-muted\">Add to results</label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                    </Form>\r\n\r\n\r\n                    <Row style={{ height: '420px' }}>\r\n                        <Col xs lg=\"6\">\r\n                            <img src={testVideoData.imageData} style={{ width: \"90%\" }} alt=\"\"/>\r\n\r\n                        </Col>\r\n                        <Col xs lg=\"6\">\r\n                            {testVideoData.videoData &&\r\n                                <video width=\"90%\" autoPlay loop>\r\n                                    <source src={testVideoData.videoData} type=\"video/mp4\"></source>\r\n                                </video>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {testVideoData.message &&\r\n\r\n                        <Alert  variant={testVideoData.message['status']}>\r\n                            {testVideoData.message['message']}\r\n                        </Alert>\r\n                    }\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TestVideo;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container, Alert, FloatingLabel } from 'react-bootstrap'\r\n\r\nconst TestVideoDouble = ({ token, setUserPageState, isGenerating, setIsGenerating,\r\n    testVideo2, setTestVideo2 }) => {\r\n\r\n    let handleSubmit = async (e) => {\r\n        setIsGenerating(true)\r\n        e.preventDefault();\r\n        var start = window.performance.now();\r\n\r\n        setTestVideo2({ ...testVideo2, videoData: false, message: false })\r\n\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/test_video_double`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'img_url_1': testVideo2.imageUrl1,\r\n                'img_url_2': testVideo2.imageUrl2,\r\n                'is_save': testVideo2.checked\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': sessionStorage.getItem('functions-key')\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n\r\n            var end = window.performance.now();\r\n            setTestVideo2({\r\n                ...testVideo2, videoData: resData['result_url'],\r\n                message: { \"status\": \"success\", \"message\": \"Video successfully generated in \" + ((end - start) / 1000).toFixed(2) + \" seconds. \"\r\n                + \"Shoe counts, 1-> tensorflow: \" + resData['shoe-count-tensorflow1'] + \" mediapipe: \"  + resData['shoe-count-mediapipe1'] +\r\n            \", 2-> tensorflow: \" + resData['shoe-count-tensorflow2'] + \" mediapipe: \"  + resData['shoe-count-mediapipe2'] }\r\n            })\r\n\r\n            setIsGenerating(false)\r\n        }\r\n        else {\r\n\r\n\r\n            if (res.status === 404) {\r\n                setTestVideo2({ ...testVideo2, message: { \"status\": \"danger\", \"message\": resData['detail'], \"time\": \"\" } })\r\n            }\r\n            else {\r\n                setTestVideo2({ ...testVideo2, message: { \"status\": \"danger\", \"message\": \"Error code: \" + (res.status).toString(), \"time\": \"\" } })\r\n            }\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{}}>\r\n            <Row className=\"mt-4\">\r\n\r\n                <Col xs lg=\"2\" >\r\n                    <Button variant=\"warning\" size=\"sm\" className='' onClick={() => { setUserPageState(\"\"); }}>\r\n                        Back\r\n                    </Button>\r\n                </Col>\r\n                <Col xs lg=\"8\">\r\n\r\n\r\n                    {/* <LoadingModal show={loadingShow} text={'Generating video'} /> */}\r\n                    <Form onSubmit={handleSubmit} className='mb-4'>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <FloatingLabel label=\"Image 1 URL\">\r\n                                <Form.Control type=\"text\" placeholder=\"Image 1 URL\"\r\n                                    value={testVideo2.imageUrl1} onInput={e => setTestVideo2({ ...testVideo2, imageUrl1: e.target.value })} required />\r\n                            </FloatingLabel>\r\n\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <FloatingLabel label=\"Image 2 URL\">\r\n\r\n                            <Form.Control type=\"text\" placeholder=\"Image 2 URL\"\r\n                                value={testVideo2.imageUrl2} onInput={e => setTestVideo2({ ...testVideo2, imageUrl2: e.target.value })} required />\r\n                            </FloatingLabel>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col xs lg=\"3\">\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isGenerating} style={{ width: \"160px\" }}>\r\n                                    {isGenerating ? 'Generating video...' : 'Submit'}\r\n                                </Button>\r\n                            </Col>\r\n\r\n                            <Col className='mx-2'>\r\n                                <Form.Group>\r\n\r\n                                    <div className=\"form-check form-switch\">\r\n                                        <Form.Control className=\"form-check-input\" type=\"checkbox\" checked={testVideo2.checked}\r\n                                            onChange={(e) => setTestVideo2({ ...testVideo2, checked: e.currentTarget.checked })} />\r\n                                        <label className=\"form-check-label text-muted\">Add to results</label>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    </Form>\r\n\r\n\r\n                    <Row style={{ height: '400px' }}>\r\n                        <Col xs lg=\"4\">\r\n                            <img src={testVideo2.imageUrl1} style={{ width: \"90%\" }} alt=\"\" />\r\n\r\n                        </Col>\r\n                        <Col xs lg=\"4\">\r\n                            <img src={testVideo2.imageUrl2} style={{ width: \"90%\" }} alt=\"\" />\r\n\r\n                        </Col>\r\n                        <Col xs lg=\"4\">\r\n                            {testVideo2.videoData &&\r\n                                <video width=\"90%\" autoPlay loop>\r\n                                    <source src={testVideo2.videoData} type=\"video/mp4\"></source>\r\n                                </video>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {testVideo2.message &&\r\n\r\n                        <Alert variant={testVideo2.message['status']}>\r\n                            {testVideo2.message['message']}\r\n                        </Alert>\r\n                    }\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TestVideoDouble","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\nconst CompareTests = ({ token, setUserPageState }) => {\r\n\r\n    const [videosData, setVideosData] = useState([])\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function getVideos() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_test_videos`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setVideosData(resData['tests'])\r\n                setLoadingShow(false)\r\n\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n\r\n            }\r\n        }\r\n        getVideos();\r\n\r\n    }, [token]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Button variant=\"warning\" size=\"sm\" className='mt-2' onClick={() => { setUserPageState(\"\"); }}>\r\n                Back\r\n            </Button>\r\n\r\n\r\n            <Row className=\"mt-4\">\r\n\r\n                <LoadingModal show={loadingShow} text={'Fetching test pairs'} />\r\n                <Row style={{ height: '320px' }}>\r\n\r\n                    {videosData.map((item, i) =>\r\n                        <React.Fragment key={i}>\r\n                        \r\n                            <Col xs lg=\"6\">\r\n                                <Row className='gx-0'>\r\n                                    <div>{item.created_at}</div>\r\n                                    <Col xs lg=\"6\">\r\n                                        <img src={item.source_url} style={{ width: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"6\">\r\n                                        <video width=\"100%\" autoPlay loop>\r\n                                            <source src={item.result_url} type=\"video/mp4\"></source>\r\n                                        </video>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            {(i % 2 === 1) &&\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                        \r\n\r\n                    )}\r\n\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default CompareTests","import React, { useState, useEffect } from 'react'\r\nimport LoadingModal from '../components/LoadingModal'\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\n\r\nconst CompareTestsDouble = ({ token, setUserPageState }) => {\r\n    const [videosData, setVideosData] = useState([])\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function getVideos() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_test_videos_double`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setVideosData(resData['tests'])\r\n                setLoadingShow(false)\r\n\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n\r\n            }\r\n        }\r\n        getVideos();\r\n\r\n    }, [token]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Button variant=\"warning\" size=\"sm\" className='mt-2' onClick={() => { setUserPageState(\"\"); }}>\r\n                Back\r\n            </Button>\r\n\r\n\r\n            <Row className=\"mt-4\">\r\n\r\n                <LoadingModal show={loadingShow} text={'Fetching test pairs'} />\r\n                <Row style={{ height: '320px' }}>\r\n\r\n                    {videosData.map((item, i) =>\r\n                        <React.Fragment key={i}>\r\n                        \r\n                            <Col xs lg=\"6\">\r\n                                <Row className='gx-0'>\r\n                                    <div>{item.created_at}</div>\r\n                                    <Col xs lg=\"4\">\r\n                                        <img src={item.source_url_1} style={{ maxHeight: \"100%\", maxWidth: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <img src={item.source_url_2} style={{ maxHeight: \"100%\", maxWidth: \"100%\" }} alt=\"\"/>\r\n\r\n                                    </Col>\r\n                                    <Col xs lg=\"4\">\r\n                                        <video width=\"100%\" autoPlay loop>\r\n                                            <source src={item.result_url} type=\"video/mp4\"></source>\r\n                                        </video>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            {(i % 2 === 1) &&\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                        \r\n\r\n                    )}\r\n\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default CompareTestsDouble","import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\n\r\nconst UserDefault = ({setUserPageState, userType}) => {\r\n  return (\r\n    <div className='mt-5'>\r\n                    \r\n                    {userType === \"admin\" &&\r\n                    <Row className=\"justify-content-md-center\" md=\"auto\"    >\r\n                            <Col>\r\n                           \r\n                                <>\r\n                                    <Button variant=\"primary\" size=\"sm\" className='ms-3 me-1' onClick={() => { setUserPageState(\"testVideo\"); }}>\r\n                                        Generate Videos (1 image)\r\n                                    </Button>\r\n\r\n                                    <Button variant=\"primary\" size=\"sm\" className='me-4 ms-1' onClick={() => { setUserPageState(\"compareTests\"); }}>\r\n                                        Results\r\n                                    </Button>\r\n\r\n                                    <Button variant=\"primary\" size=\"sm\" className='ms-4 me-1' onClick={() => { setUserPageState(\"testVideoDouble\"); }}>\r\n                                        Generate Videos (2 images)\r\n                                    </Button>\r\n\r\n                                    <Button variant=\"primary\" size=\"sm\" className='me-3 ms-1' onClick={() => { setUserPageState(\"compareTestsDouble\"); }}>\r\n                                        Results\r\n                                    </Button>\r\n                                </>\r\n                            \r\n                            </Col>\r\n                    </Row>\r\n                }\r\n                    <Row className=\"justify-content-md-center mt-4\" md=\"auto\"    >\r\n                    \r\n                    <Col xs lg=\"6\">My feeds:\r\n                    </Col>\r\n                    <Col></Col>\r\n\r\n                    \r\n                    </Row>\r\n                    \r\n                </div>\r\n  )\r\n}\r\n\r\nexport default UserDefault","import React, { useEffect, useState } from 'react';\r\nimport TestVideo from '../components/TestVideo';\r\nimport TestVideoDouble from '../components/TestVideoDouble';\r\n\r\nimport CompareTests from '../components/CompareTests';\r\nimport CompareTestsDouble from '../components/CompareTestsDouble';\r\n\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\nimport UserDefault from '../components/UserDefault';\r\n\r\n\r\nconst UserPage = ({ token, email, userPageState, setUserPageState, isGenerating, setIsGenerating }) => {\r\n\r\n    // const [userPageState, setUserPageState] = useState(\"\")\r\n    const [userType, setUserType] = useState(\"\")\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n    \r\n    const [testVideoData, setTestVideoData] = useState({\"imageType\": \"\", \"imageData\": \"\", \"videoData\": false, \"checked\": true, \"message\": false})\r\n    const [testVideoDoubleData, setTestVideoDoubleData] = useState({\"imageUrl1\": \"\", \"imageUrl2\": \"\", \"videoData\": false, \"checked\": true, \"message\": false})\r\n\r\n    const main = (userPageState) => {\r\n        switch (userPageState) {\r\n\r\n            case \"compareTests\":\r\n                return <CompareTests token={token} setUserPageState={setUserPageState} className='mt-4' />\r\n\r\n            case \"compareTestsDouble\":\r\n                return <CompareTestsDouble token={token} setUserPageState={setUserPageState} className='mt-4' />\r\n\r\n            case \"testVideo\":\r\n                return <TestVideo token={token} setUserPageState={setUserPageState} className='mt-4' isGenerating={isGenerating} \r\n                setIsGenerating={setIsGenerating}  testVideoData={testVideoData} setTestVideoData={setTestVideoData}/>\r\n            case \"testVideoDouble\":\r\n                return <TestVideoDouble token={token} setUserPageState={setUserPageState} className='mt-4' isGenerating={isGenerating} \r\n                setIsGenerating={setIsGenerating}  testVideo2={testVideoDoubleData} setTestVideo2={setTestVideoDoubleData}/>\r\n            default:\r\n                return <UserDefault token={token} setUserPageState={setUserPageState} className='mt-4' isGenerating={isGenerating} \r\n                setIsGenerating={setIsGenerating} email={email} userType={userType}/>\r\n                return \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function getUser() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_user_info`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'email': email,\r\n\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-functions-key': sessionStorage.getItem('functions-key')\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setUserType(resData[\"user_type\"])\r\n                setLoadingShow(false)\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n            }\r\n        }\r\n        getUser();\r\n\r\n    }, [email, token]);\r\n\r\n    return (\r\n        <div>\r\n            <LoadingModal show={loadingShow} text={'Getting user data'} />\r\n            {main(userPageState)}\r\n        </div >\r\n    );\r\n};\r\nexport default UserPage;\r\n","import './App.css';\nimport React, { useState } from 'react'\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Routes,\n  Route\n}  from \"react-router-dom\";\nimport Header from './components/Header';\nimport MainPage from './pages/MainPage';\nimport CreateVideosPage from './pages/CreateVideosPage';\nimport CreateFeedPage from './pages/CreateFeedPage';\nimport LoginPage from './pages/LoginPage';\nimport UserPage from './pages/UserPage';\n\n\nconst getToken = () => {\n  const tokenString = sessionStorage.getItem('functions-key');\n  return tokenString\n};\n\nconst getEmail = () => {\n  const emailString = sessionStorage.getItem('email');\n  return emailString\n};\n\nconst saveToken = (userToken, email) => {\n  sessionStorage.setItem('functions-key', userToken);\n  sessionStorage.setItem('email', email);\n\n};\n\nconst logout = () => {\n  sessionStorage.removeItem('token');\n  window.location.reload();\n\n};\n\nfunction App() {\n  const [userPageState, setUserPageState] = useState(\"\")\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [token, setToken] = useState(getToken())\n\n  const [isGenerating, setIsGenerating] = useState(false)\n\n\n  if(!token){\n    return (\n      <LoginPage email={email} password={password} setEmail={setEmail} setPassword={setPassword} saveToken={saveToken} setToken={setToken}/>\n    )\n  }\n\n  else{\n  return (\n  <>    \n    <Router>\n      <Header email={getEmail()} logout={logout} setUserPageState={setUserPageState}/>\n      <Routes >\n        <Route path=\"\" element={ <MainPage/> } />\n        <Route path=\"createFeed\" element={<CreateFeedPage token={getToken()}/>} />\n\n        <Route path=\"createVideos\" element={<CreateVideosPage/>}/>\n        <Route path=\"user\" element={<UserPage token={getToken()} email={getEmail()} \n        setUserPageState={setUserPageState} userPageState={userPageState} isGenerating={isGenerating} setIsGenerating={setIsGenerating}/>} />\n\n      </Routes>\n    </Router>\n\n    {isGenerating &&\n      <div className='p-1 btn btn-outline-primary disabled m-2' style={{position: \"fixed\", bottom: \"0\", right: \"0\"}}>\n\n        Generating video...\n        </div>\n    }\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}