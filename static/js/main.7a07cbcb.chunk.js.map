{"version":3,"sources":["components/Header.js","pages/MainPage.js","pages/CreateVideosPage.js","components/CreateFeedForm.js","components/ConfirmModal.js","components/ArrangeFeed.js","components/Loading.js","components/PreviewFeed.js","utils.js","components/ArrangeVisuals.js","pages/CreateFeedPage.js","components/LoadingModal.js","pages/LoginPage.js","components/TestVideo.js","pages/UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","email","logout","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","onClick","MainPage","Row","Col","lg","CreateVideosPage","CreateFeedForm","setCreateFeedState","setAlertState","setData","token","console","log","useState","feedName","setFeedName","feedURL","setFeedURL","handleSubmit","a","show","text","fetch","URLSearchParams","method","headers","res","json","data","ok","Form","onSubmit","e","preventDefault","Group","Label","Control","required","type","placeholder","value","onInput","target","Button","ConfirmModal","title","buttonText","handleClose","handleConfirm","Modal","onHide","closeButton","Title","Body","Footer","ArrangeFeed","feedData","ImgUrl","setImgUrl","setTitle","setBody","WebUrl","setWebUrl","colOptions","modalShow","setModalShow","body","JSON","stringify","feed_name","feed_url","resData","map","colOption","i","Fragment","controlId","column","sm","col","Select","get","onChange","set","disabled","col_names","colName","Table","striped","bordered","hover","size","feed_data","feed","Object","values","element","toString","length","substring","Loading","height","width","style","Spinner","animation","role","PreviewFeed","handleGenerate","res2","autoPlay","loop","src","getPreviewVideo","res2Data","ArrangeVisuals","handleClick","CreateFeedPage","CreateFeedState","AlertState","Data","Progress","setProgress","useEffect","header","ProgressBar","now","percent","label","Alert","visibility","main","LoadingModal","LoginPage","password","setEmail","setPassword","saveToken","setToken","loadingShow","setLoadingShow","TestVideo","setUserPageState","imageType","setImageType","imageData","setImageData","videoData","setVideoData","time","setTime","start","window","performance","split","end","accept","reader","FileReader","onload","frEvent","image","Image","imageEvent","canvas","document","createElement","getContext","drawImage","dataUrl","toDataURL","result","files","readAsDataURL","xs","toFixed","UserPage","userPageState","userType","setUserType","getUser","md","getToken","sessionStorage","getItem","getEmail","userToken","setItem","removeItem","location","reload","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a07cbcb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Header = ({email, logout}) => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">AdVideoMaker</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        \r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/createFeed\">Create Feed</Nav.Link>\r\n                        {/* <Nav.Link as={Link} to=\"/createVideos\">Create Videos</Nav.Link> */}\r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                    </Nav>\r\n                    {/* <Nav>\r\n                        <Nav.Link as={Link} to=\"/\" eventKey={1}>PlaceHolder1</Nav.Link>\r\n                        <Nav.Link eventKey={2} as={Link} to=\"/\">\r\n                            PlaceHolder2\r\n                        </Nav.Link>\r\n                    </Nav> */}\r\n                    <Nav>\r\n                        <Nav.Link as={Link} to=\"/user\">\r\n                            {email}\r\n                        </Nav.Link>\r\n                        <Nav.Link onClick={logout}>\r\n                            Log Out\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Main Page</strong> <span></span>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { useState }  from 'react'\r\nconst CreateVideosPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create Videos</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateVideosPage\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst CreateFeedForm = ({ setCreateFeedState, setAlertState, setData, token }) => {\r\n    console.log(typeof('appp'));\r\n    const [userName, setUserName] = useState('')\r\n    const [feedName, setFeedName] = useState('')\r\n    const [feedURL, setFeedURL] = useState('https://docs.google.com/spreadsheets/d/e/2PACX-1vQvm265NJfQjH0GtMLNRD7rJIA5vapYsz1BbIEsmdOYJGuvWlfARCYwy3SS9BmVGGOJ4-MGhcoO7h8w/pub?gid=0&single=true&output=csv')\r\n\r\n\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/check_feed?` + new URLSearchParams({ feedURL: feedURL }), {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': token,\r\n\r\n\r\n            },\r\n        })\r\n\r\n        let data = await res.json();\r\n        if (res.ok) {\r\n            data['feed_name'] = feedName;\r\n            setData(data);\r\n            setCreateFeedState(\"arrangeFeed\");\r\n\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: data['detail'] })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Form onSubmit={e => { openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={e => { handleSubmit(); e.preventDefault(); }}>\r\n                \r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed Name</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Enter a name for your feed.\"\r\n                        value={feedName} onInput={e => setFeedName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Feed URL</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter feed URL.\"\r\n                        value={feedURL} onInput={e => setFeedURL(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type='submit'>Submit</Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateFeedForm\r\n","import { Modal, Button } from 'react-bootstrap'\r\nimport React from 'react'\r\n\r\nconst ConfirmModal = ({ show, title, text, buttonText,\r\n    handleClose, handleConfirm }) => {\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{text}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => { handleConfirm(); handleClose(); }}>\r\n                    {buttonText}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmModal\r\n","import React, { useState } from 'react'\r\nimport { Form, Row, Col, Table, Button} from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\nconst ArrangeFeed = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n\r\n\r\n    const [ImgUrl, setImgUrl] = useState(false)\r\n    const [Title, setTitle] = useState(false)\r\n    const [Body, setBody] = useState(false)\r\n    const [WebUrl, setWebUrl] = useState(false)\r\n\r\n    const colOptions = [{\"col\":\"Image URL\", \"set\": setImgUrl, \"get\": ImgUrl}, \r\n                        {\"col\": \"Title\", \"set\": setTitle, \"get\": Title}, \r\n                        {\"col\": \"Body\", \"set\": setBody, \"get\": Body}, \r\n                        {\"col\": \"Website URL\", \"set\": setWebUrl, \"get\": WebUrl}];\r\n    \r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    let handleSaveClick = (e) => {\r\n\r\n        console.log(\"in save clikc\");\r\n        if(ImgUrl && Title && Body && WebUrl){\r\n            openModal(); \r\n            console.log(\"in if\");\r\n\r\n        }\r\n        else{\r\n            console.log(\"in else\");\r\n\r\n            setAlertState({ show: true, text: \"Please fill all of the fields first.\" })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    let handleSubmit = async () => {\r\n        setCreateFeedState(\"loading\")\r\n        setAlertState({ show: false, text: \"\" })\r\n        console.log(ImgUrl, Title, Body, WebUrl)\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/create_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'user_id': 1,\r\n                'feed_name': feedData.feed_name,\r\n                'feed_url': feedData.feed_url,\r\n                'img_url_col': ImgUrl,\r\n                'title_col': Title,\r\n                'site_url_col': WebUrl,\r\n                'body_col': Body,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': token\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            console.log(\"feedData\",feedData);\r\n            console.log(\"return data\",resData);\r\n\r\n            // data[\"first_rows\"] = feedData.feed_data.data;\r\n            feedData[\"title_col\"] = resData[\"title_col\"]\r\n            feedData[\"site_url_col\"] = resData[\"site_url_col\"]\r\n            feedData[\"img_url_col\"] = resData[\"img_url_col\"]\r\n            feedData[\"body_col\"] = resData[\"body_col\"]\r\n            feedData[\"feed_id\"] = resData[\"feed_id\"]\r\n            \r\n            setData(feedData)\r\n            setCreateFeedState(\"arrangeVisuals\");\r\n        }\r\n        else {\r\n            setCreateFeedState(\"checkURL\");\r\n            setAlertState({ show: true, text: resData['detail'] })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Form onSubmit={e => {openModal(); e.preventDefault();}}> */}\r\n            <Form onSubmit={handleSaveClick}>\r\n\r\n                <Row>\r\n                    {colOptions.map((colOption, i) =>\r\n                        <React.Fragment key={i}>\r\n                            <Col>\r\n                                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={4} className='text-end fw-bold'>\r\n                                        {colOption.col}\r\n                                    </Form.Label>\r\n                                    <Col sm={8}>\r\n\r\n                                        {/* <Form.Select aria-label=\"Default select example\" onChange={e => setColMatches(state => (state[colOption] = e.target.value))}> */}\r\n                                        {/* <Form.Select aria-label=\"Default select example\"  value={colOption.get} onChange={(e)=>{colOption.set(e)}}> */}\r\n                                        <Form.Select aria-label=\"Default select example\" value={colOption.get}   onChange={(e)=>{colOption.set(e.target.value)}}>\r\n                                            <option disabled value={false}>Select..</option>\r\n                                            \r\n                                            {feedData.col_names.map((colName, i) =>\r\n\r\n                                                <option key={i} value={colName}>{colName}</option>\r\n\r\n                                            )}\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            {(i % 2 === 1) &&\r\n\r\n                                <div className=\"w-100\"></div>\r\n                            }\r\n                        </React.Fragment>\r\n                    )}\r\n                </Row>\r\n                <Button variant=\"primary\" type='submit'>Save</Button>\r\n\r\n            </Form>\r\n            <div className='mt-4'>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            {feedData.col_names.map((colName, i) =>\r\n                                <th key={i}>{colName}</th>\r\n\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {feedData.feed_data.data.map((feed, i) =>\r\n                            <tr key={i}>\r\n                                {/* 50 den buyuk karakterli satırlar için hepsini yazdırma */}\r\n                                {Object.values(feed).map((element, i) =>\r\n                                    <td key={i}>\r\n\r\n                                        {element.toString().length < 50 ? element : element.toString().substring(0, 50) + '...'}</td>\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to create a new feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleSubmit} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ArrangeFeed\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = ({height=100, width=200}) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{height: height +\"px\", width: width +\"px\"}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport ConfirmModal from './ConfirmModal'\r\n\r\n\r\nconst PreviewFeed = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n    console.log(\"here is preview data:\", feedData);\r\n    \r\n    const [modalShow, setModalShow] = useState(false)\r\n    const openModal = () => setModalShow(true)\r\n    const closeModal = () => setModalShow(false)\r\n    \r\n    let confirmGenerate = (e) => {\r\n        openModal();\r\n    }\r\n\r\n    let handleGenerate = async () => {  \r\n\r\n        setCreateFeedState(\"loading\")\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props_feed`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'feed_id': feedData['feed_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': token\r\n\r\n\r\n            },\r\n        })\r\n    \r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video_feed`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'video_ids': resData['video_ids'],\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                },\r\n            })\r\n        \r\n            let res2Data = await res2.json();\r\n            if (res2.ok) {\r\n                setCreateFeedState(\"success\")\r\n\r\n                return\r\n\r\n\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        else {\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <video width=\"320\" height=\"240\" autoPlay loop>\r\n                <source src={feedData['previewVideoUrl']} type=\"video/mp4\"></source>\r\n            </video>\r\n            <div>\r\n\r\n            {/* <img width=\"320\" src={feedData['previewVideoUrl']} /> */}\r\n            </div>\r\n\r\n            \r\n            {/* <Button variant=\"primary\" onClick={confirmGenerate}>Start Generating Videos</Button> */}\r\n\r\n            <ConfirmModal show={modalShow} title=\"Save Feed\" text=\"Are you sure to start generating videos from this feed?\"\r\n                buttonText=\"Yes\" handleClose={closeModal} handleConfirm={handleGenerate} />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PreviewFeed\r\n","export const  getCookie = (name) => {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport const getPreviewVideo = async (feedData, token) => {\r\n\r\n    let res = await fetch(`https://shoevideo.azurewebsites.net/api/save_video_props`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            'user_id': 1,\r\n            'feed_id': feedData['feed_id'],\r\n            'img_url': feedData['feed_data']['data'][0][feedData['img_url_col']],\r\n            'title': feedData['feed_data']['data'][0][feedData['title_col']],\r\n            'body': feedData['feed_data']['data'][0][feedData['body_col']],\r\n            'site_url': feedData['feed_data']['data'][0][feedData['site_url_col']],\r\n\r\n\r\n\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'x-functions-key': token\r\n        },\r\n    })\r\n\r\n    let resData = await res.json();\r\n    if (res.ok) {\r\n        let res2 = await fetch(`https://shoevideo.azurewebsites.net/api/generate_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'video_id': resData['video_id'],\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': token\r\n\r\n            },\r\n        })\r\n    \r\n        let res2Data = await res2.json();\r\n        if (res2.ok) {\r\n            return res2Data['result_url']\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    else {\r\n    }\r\n    \r\n}\r\n\r\n\r\n// import { getCookie } from '../utils'\r\n// var csrftoken = getCookie('csrftoken');","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport {getPreviewVideo} from '../utils.js'\r\n\r\nconst ArrangeVisuals = ({ setCreateFeedState, setAlertState, feedData, setData, token }) => {\r\n    console.log(\"visuals data:\", feedData);\r\n    const handleClick = async (e) => {\r\n        setCreateFeedState(\"loading\")\r\n        feedData['previewVideoUrl'] = await getPreviewVideo(feedData, token)\r\n\r\n        setData(feedData)\r\n        console.log(\"url: \", feedData['previewVideoUrl']);\r\n\r\n        setCreateFeedState(\"preview\")\r\n    }\r\n    return (\r\n        <div>\r\n\r\n\r\n            <p> Pick a theme </p>\r\n            <p> Pick a color etc...</p>\r\n            <Button variant=\"primary\" onClick={handleClick}>Continue</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArrangeVisuals\r\n","import React, { useState, useEffect} from 'react'\r\nimport { Container, Alert, Row, Col, ProgressBar } from 'react-bootstrap'\r\nimport CreateFeedForm from '../components/CreateFeedForm'\r\nimport ArrangeFeed from '../components/ArrangeFeed'\r\nimport Loading from '../components/Loading'\r\nimport PreviewFeed from '../components/PreviewFeed'\r\nimport ArrangeVisuals from '../components/ArrangeVisuals'\r\nconst CreateFeedPage = ({token}) => {\r\n    const asd = \"asdr\"\r\n    console.log(\"token: \", asd);\r\n    const [CreateFeedState, setCreateFeedState] = useState(\"checkURL\")\r\n\r\n    const [AlertState, setAlertState] = useState({ show: false, text: \"\" })\r\n    const [Data, setData] = useState({})\r\n    const [Progress, setProgress] = useState({\"percent\": 10, \"label\": \"1/5\"})\r\n    \r\n    useEffect(() => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                setProgress({\"percent\": 10, \"label\": \"1/5\"});\r\n                break;\r\n            case \"arrangeFeed\":\r\n                setProgress({\"percent\": 35, \"label\": \"2/5\"});\r\n                break;\r\n            case \"arrangeVisuals\":\r\n                setProgress({\"percent\": 60, \"label\": \"3/5\"});\r\n                break;\r\n            case \"preview\":\r\n                setProgress({\"percent\": 85, \"label\": \"4/5\"});\r\n                break;\r\n            case \"success\":\r\n                setProgress({\"percent\": 100, \"label\": \"5/5\"});\r\n                break;\r\n            case \"loading\":\r\n                break;\r\n            default:\r\n                return \"\"\r\n        }\r\n\r\n        return () => {\r\n        }\r\n    }, [CreateFeedState])\r\n\r\n    const header = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return \"Provide a URL\"\r\n            case \"arrangeFeed\":\r\n                return Data.feed_name + \" - Match the columns\"\r\n            case \"arrangeVisuals\":\r\n                return Data.feed_name + \" - Arrange Visuals\"\r\n            case \"preview\":\r\n                return Data.feed_name + \" - Video Preview\"\r\n            case \"loading\":\r\n                return \"\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const main = (CreateFeedState) => {\r\n        switch (CreateFeedState) {\r\n            case \"checkURL\":\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} token={token}/>\r\n            case \"arrangeFeed\":\r\n                return <ArrangeFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} token={token}/>\r\n\r\n            case \"arrangeVisuals\":\r\n                return <ArrangeVisuals setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} setData={setData} token={token}/>\r\n            case \"preview\":\r\n                return <PreviewFeed setCreateFeedState={setCreateFeedState} \r\n                setAlertState={setAlertState} feedData={Data} token={token}/>\r\n\r\n            case \"success\":\r\n                return <div className='fs-5'>\r\n                        Videos successfully generated.                  \r\n                    </div>\r\n            case \"loading\":\r\n                return <Loading width={300} height={200} />\r\n            default:\r\n                return <CreateFeedForm setCreateFeedState={setCreateFeedState}\r\n                    setAlertState={setAlertState} setData={setData} token={token}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        <div className='mt-2 fs-4'>\r\n                            <strong >Create a new feed:</strong> <span>{header(CreateFeedState)}</span>\r\n                        </div>\r\n                        <ProgressBar className='fs-5 fw-bold' style={{height: '25px'}} striped variant=\"info\" now={Progress.percent} label={Progress.label} />\r\n                        <Alert className='mt-2' variant='danger' style={{ visibility: AlertState.show ? 'visible' : 'hidden', height: \"50px\" }}>\r\n                            {AlertState.text}\r\n                        </Alert>\r\n                        {main(CreateFeedState)}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFeedPage\r\n","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport Loading from '../components/Loading'\r\n\r\nconst LoadingModal = ({show, text}) => {\r\n    return (\r\n        <Modal show={show} size=\"sm\">\r\n            <Modal.Body  className='text-center' style={{height: \"150px\"}}>\r\n                {text}\r\n                <Loading width={260} height={100} />\r\n            \r\n            \r\n            </Modal.Body>\r\n            \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default LoadingModal","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\n\r\nconst LoginPage = ({ email, password, setEmail, setPassword, saveToken, setToken }) => {\r\n\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    let handleSubmit = async (e) => {\r\n\r\n        setLoadingShow(true)\r\n\r\n        e.preventDefault();\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/authenticate`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'email': email,\r\n                'password': password,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n\r\n        if (res.ok) {\r\n\r\n            saveToken(resData['key'], email)\r\n            setToken(resData['key'])\r\n            setLoadingShow(false)\r\n\r\n        }\r\n        else {\r\n            setLoadingShow(false)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <LoadingModal show={loadingShow} text={'Logging in...'} />\r\n\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"5\">\r\n                        <Form onSubmit={handleSubmit} className='mt-4'>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onInput={e => setEmail(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onInput={e => setPassword(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from './LoadingModal'\r\n\r\n\r\nconst TestVideo = ({ token, setUserPageState }) => {\r\n\r\n    const [imageType, setImageType] = useState(\"\")\r\n    const [imageData, setImageData] = useState(\"\")\r\n    const [videoData, setVideoData] = useState(false)\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n\r\n    const [time, setTime] = useState(false)\r\n\r\n\r\n    let handleImage = (e) => {\r\n        setLoadingShow(true)\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = function (frEvent) {\r\n\r\n            var image = new Image();\r\n            image.onload = function (imageEvent) {\r\n\r\n                // Resize the image\r\n                var canvas = document.createElement('canvas'),\r\n                    // max_size = 50\r\n                    max_width = 250,\r\n                    max_height = 250,\r\n                    width = image.width,\r\n                    height = image.height;\r\n                // if (width > height) {\r\n                //     if (width > max_width) {\r\n                //         height *= max_width / width;\r\n                //         width = max_width;\r\n                //     }\r\n                // } else {\r\n                //     if (height > max_height) {\r\n                //         width *= max_height / height;\r\n                //         height = max_height;\r\n                //     }\r\n                // }\r\n                width = max_width\r\n                height = max_height\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                canvas.getContext('2d').drawImage(image, 0, 0, width, height);\r\n                var dataUrl = canvas.toDataURL('image/jpeg');\r\n                // console.log(\"resized type:\", typeof(dataUrl), \"len: \", dataUrl.length, \"content: \", dataUrl);\r\n                setImageData(dataUrl)\r\n\r\n            }\r\n            // setImageData(frEvent.target.result)\r\n            image.src = frEvent.target.result;\r\n        }\r\n\r\n        setImageType(e.target.files[0].type)\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        setLoadingShow(false)\r\n\r\n    }\r\n\r\n    let handleSubmit = async (e) => {\r\n        setLoadingShow(true)\r\n\r\n        var start = window.performance.now();\r\n\r\n        setVideoData(false)\r\n        e.preventDefault();\r\n\r\n        let res = await fetch(`https://shoevideo.azurewebsites.net/api/test_video`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                'image_data': imageData.split(\",\", 2)[1],\r\n                'image_type': imageType\r\n\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-functions-key': token\r\n            },\r\n        })\r\n\r\n        let resData = await res.json();\r\n        if (res.ok) {\r\n            setVideoData(resData['result_url'])\r\n\r\n            // setUserPageState(\"testVideo\")\r\n            console.log(\"vdata type:\", typeof(videoData), \"content\", videoData);\r\n\r\n            var end = window.performance.now();\r\n            setTime(end - start);\r\n            setLoadingShow(false)\r\n\r\n        }\r\n        else {\r\n            setLoadingShow(false)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='mt-5'>\r\n\r\n            <LoadingModal show={loadingShow} text={'Generating video'} />\r\n            <Form onSubmit={handleSubmit} >\r\n                <Row className='mb-4'>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImage} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs lg=\"3\">\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n            <Row style={{ height: '360px' }}>\r\n                <Col xs lg=\"6\">\r\n                    <img src={imageData} style={{ width: \"90%\" }} />\r\n\r\n                </Col>\r\n                <Col xs lg=\"6\">\r\n                    {videoData &&\r\n                        <video width=\"90%\" autoPlay loop>\r\n                            <source src={videoData} type=\"video/mp4\"></source>\r\n                        </video>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n            {time &&\r\n                <div>Generation time: {(time / 1000).toFixed(2)} seconds</div>\r\n            }\r\n\r\n        </div >);\r\n};\r\n\r\nexport default TestVideo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TestVideo from '../components/TestVideo';\r\nimport Loading from '../components/Loading';\r\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\r\nimport LoadingModal from '../components/LoadingModal'\r\n\r\n\r\nconst UserPage = ({ token, email }) => {\r\n\r\n    const [userPageState, setUserPageState] = useState(\"\")\r\n    const [userType, setUserType] = useState(\"\")\r\n    const [loadingShow, setLoadingShow] = useState(false);\r\n\r\n    const main = (userPageState) => {\r\n        switch (userPageState) {\r\n            \r\n            case \"testVideo\":\r\n                return <TestVideo token={token} setUserPageState={setUserPageState} className='mt-4'/>\r\n            default:\r\n                return <div className='mt-5'>\r\n\r\n                    <Row></Row>\r\n\r\n                    <Row className=\"justify-content-md-center\" md=\"auto\"    >\r\n                        <Col>\r\n                        {userType == \"admin\" &&\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={() => { setUserPageState(\"testVideo\"); }}>\r\n                                Test Videos\r\n                            </Button>}\r\n                            </Col>\r\n                    </Row>\r\n                </div>\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function getUser() {\r\n            setLoadingShow(true)\r\n\r\n            let res = await fetch(`https://shoevideo.azurewebsites.net/api/get_user_info`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'email': email,\r\n\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-functions-key': token\r\n                },\r\n            })\r\n\r\n            let resData = await res.json();\r\n            if (res.ok) {\r\n                setUserType(resData[\"user_type\"])\r\n                setLoadingShow(false)\r\n\r\n            }\r\n            else {\r\n                setLoadingShow(false)\r\n\r\n            }\r\n        }\r\n        getUser();\r\n\r\n    }, [email, token]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <LoadingModal show={loadingShow} text={'Getting user data'} />\r\n\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"8\">\r\n                        {main(userPageState)}\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div >\r\n\r\n    );\r\n\r\n};\r\nexport default UserPage;\r\n","import './App.css';\nimport React, { useState } from 'react'\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Routes,\n  Route\n}  from \"react-router-dom\";\nimport Header from './components/Header';\nimport MainPage from './pages/MainPage';\nimport CreateVideosPage from './pages/CreateVideosPage';\nimport CreateFeedPage from './pages/CreateFeedPage';\nimport LoginPage from './pages/LoginPage';\nimport UserPage from './pages/UserPage';\n\n\nconst getToken = () => {\n  const tokenString = sessionStorage.getItem('token');\n  return tokenString\n};\n\nconst getEmail = () => {\n  const emailString = sessionStorage.getItem('email');\n  return emailString\n};\n\nconst saveToken = (userToken, email) => {\n  sessionStorage.setItem('token', userToken);\n  sessionStorage.setItem('email', email);\n\n};\n\nconst logout = () => {\n  sessionStorage.removeItem('token');\n  window.location.reload();\n\n};\n\nfunction App() {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [token, setToken] = useState(getToken())\n  if(!token){\n    return (\n      <LoginPage email={email} password={password} setEmail={setEmail} setPassword={setPassword} saveToken={saveToken} setToken={setToken}/>\n    )\n  }\n\n  else{\n  return (\n\n    <Router>\n      <Header email={getEmail()} logout={logout}/>\n      <Routes>\n        <Route path=\"\" element={ <MainPage/> } />\n        <Route path=\"createFeed\" element={<CreateFeedPage token={getToken()}/>} />\n\n        <Route path=\"createVideos\" element={<CreateVideosPage/>}/>\n        <Route path=\"user\" element={<UserPage token={getToken()} email={getEmail()}/>} />\n\n      </Routes>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}